[{"drivers":{},"generic":{"if_ieee80211subr":[["2004-06-22","36a464030ee8ae15735a19d3edd5bea6eb8b37d1","Todd C. Miller","millert@openbsd.org","Import current NetBSD/FreeBSD 802.11 framework. Based in part on a diff from Matthew Gream.","1","0","-3691"],["2004-01-26","d16210812ea1238b496949a130c22ad79b292c1d","Federico G. Schwindt","fgsch@openbsd.org","- use SIOC[GS]WAVELAN. - fill ac_enaddr correctly. - put ic_myaddr back.","1","11","-9"],["2004-01-07","74f0745f336469b7c27e6c46500785078fe6436b","Federico G. Schwindt","fgsch@openbsd.org","ieee80211 framework from NetBSD; ok'd by several people some time ago. more fixes comming.","1","3689","0"]],"if_ieee80211":[["2004-11-29","9814748c1f004b71bc195331dc51aa2947669f18","Federico G. Schwindt","fgsch@openbsd.org","remove old header. everything should use net80211/ stuff. as for the ports, i could only find one. if there are more, they will be fixed in the tree as discussed with peter. deraadt@ pvalchev@ ok.","1","0","-640"],["2004-01-07","74f0745f336469b7c27e6c46500785078fe6436b","Federico G. Schwindt","fgsch@openbsd.org","ieee80211 framework from NetBSD; ok'd by several people some time ago. more fixes comming.","1","2","-1"],["2003-11-16","0d009e0ef2440651346e2853e702647cd6a2a56c","avsm","","convert __attribute__((__packed__)) to __packed so that parsers unaware of gcc extensions have more of a chance. ok mcbride@, no objections from millert@, deraadt@","1","2","-2"],["2003-09-21","7f28f6bcee592bad61f2c47d43641184f66921fb","Federico G. Schwindt","fgsch@openbsd.org","sync with netbsd defines. no functional changes. ok markus deraadt","1","418","-44"],["2002-03-28","e2e1a521ce4783ee99b60d5219d2fe8c5ac93853","Michael Shalayeff","mickey@openbsd.org","some BITS defs for %b","1","2","-1"],["2002-03-28","345dee4b53b6e8b55a2ec82ac6b6511ba57b8117","Michael Shalayeff","mickey@openbsd.org","i forgot these for if_wi","1","111","-9"],["2002-02-22","7088a5201351eb2bf846400e63c67fee26fd495e","Michael Shalayeff","mickey@openbsd.org","IEEE80211_NWKEY_* flags; from netbsd","1","6","-1"],["2001-06-11","68f8d89ed485887dfc5e826e5f6cf4107f5ee7a5","Michael Shalayeff","mickey@openbsd.org","sync w/ netbsd","1","22","-2"],["2001-06-09","e2087f0deefee0c989898f2efd28c3ce06cc1623","Angelos D. Keromytis","angelos@openbsd.org","By popular demand, protect from multiple inclusion, and fix to use the same naming style.","1","2","-2"],["2000-09-04","f6838554385b867498f3e65a5b89e96369e2d0d4","Michael Shalayeff","mickey@openbsd.org","sync w/ netbsd","1","25","-2"],["2000-03-22","daf0b825f7da8d76c580fa7c9128f903baf92209","Michael Shalayeff","mickey@openbsd.org","802.11 stuff beginnings, from netbsd","1","114","0"]],"net80211":[["2015-02-09","2853bfb04621a6d637b0b57757850d1c4ffcb31a","David Gwynne","dlg@openbsd.org","tweak the new if_input function so it takes an mbuf_list instead of a single mbuf. this forces us to batch work between the hardware rx handlers and the stack.","1","6","-3"],["2015-02-08","302a1e62d69cd1425afd4bd880246d3c64e2f504","Martin Pieuchot","mpi@openbsd.org","Convert wirless devices to if_input(), tested with iwn(4) and urtwn(4).","1","11","-11"],["2015-01-27","cce142b2c5443229ea687b1dd71f80266adeac09","David Gwynne","dlg@openbsd.org","remove the second void * argument on tasks.","1","4","-4"],["2015-01-13","fd35817586f5d79f8e5fb754352ccce67cc7f5df","Stefan Sperling","stsp@openbsd.org","In IBSS mode, stop calling the driver's newassoc() each time a probe response is received from a node. Only call it once when the node is initially discovered, as used to be the case before r1.4 of this file. Asking the driver to set up its per-node private state once is enough. Also remove an outdated comment. ok sthen deraadt jsg","1","3","-12"],["2015-01-09","08d62ac08bc89bdd901c97ced6a8cf49d354a8e2","Stuart Henderson","sthen@openbsd.org","Change rssi passed to ifconfig(8) to a signed value to fix printing signal strengths on 802.11 interfaces.  ok stsp@","1","3","-3"],["2014-12-23","e1c0f7b0660a6840359c15b8fc0a8bb0d38c7c38","tedu","","unifdef some more INET. v4 4life.","16","16","-52"],["2014-11-18","a74d276ec0836743b3f8dbe3868e8def8a770001","tedu","","move arc4random prototype to systm.h. more appropriate for most code to include that than rdnvar.h. ok deraadt dlg","5","5","-13"],["2014-09-14","74ff4ec22b13b8df26720baea4698b2f0ccd7256","jsg","","remove uneeded proc.h includes ok mpi@ kspillner@","9","9","-18"],["2014-09-12","f5d46acbb3931dad74701df894b06c0f22dc4c13","Stuart Henderson","sthen@openbsd.org","Remove cached 802.11 nodes in IEEE80211_STA_CACHE state (these are nodes which have been seen but which haven't otherwise interacted with us), fixing a problem where old cached nodes are seen when doing a scan. From Marcin Piotr Pawlowski, feedback stsp@ ok kspillner@ dcoppa@","3","22","-4"],["2014-08-24","fca666195fb214646fb6ecb4749c1d4b17d1f938","Vadim Zhukov","zhuk@openbsd.org","Fix wrong IEEE 802.11 ioctl's:","1","2","-2"],["2014-08-08","985e0abd596563c93ee07b899fbb3052780b80a2","Jasper Lievisse Adriaanse","jasper@openbsd.org","use nitems() instead of various local constructs","3","10","-21"],["2014-07-24","e8e686b17fdc2c25dbdb884fef02002e6dbfe114","Martin Pieuchot","mpi@openbsd.org","Fix debug printf, from Nathanael Rensen and chris@.","1","3","-2"],["2014-07-22","bbfa6704d67f973b43bdff3470a44e65a3c907ff","Martin Pieuchot","mpi@openbsd.org","Fewer <netinet/in_systm.h> !","3","3","-6"],["2014-07-12","99923dbbe0d54f4551eb101e92296794b9e3a122","tedu","","add a size argument to free. will be used soon, but for now default to 0. after discussions with beck deraadt kettenis.","8","23","-23"],["2014-07-11","a0d7b04dde586acffb5123510aaeb30f5df27beb","blambert","","move ieee80211 message printing from workq to taskq","1","16","-13"],["2014-07-10","fb53a5c2e4e1481cf8da281fa1fa5dea40ff1a09","Stefan Sperling","stsp@openbsd.org","Return RSN (WPA) information to userland during wireless scan, and make ifconfig show whether a wireless network uses WEP or WPA. Since struct ieee80211_nodereq grows in size old ifconfig won't be able to scan when running on a new kernel. While here, add missing ioctl constant IEEE80211_WPA_CIPHER_BIP. ok jsg@","3","23","-10"],["2014-03-20","9ad926bd963f0b8a67d54f9f65f6ddb362853567","Martin Pieuchot","mpi@openbsd.org","Do not pull <sys/tree.h> unconditionally in <net/if.h>, only the address tree and the 80211 nodes need it.","1","3","-1"],["2014-03-19","19fbc89d0f6415387f9681fa5a82882682ad01cd","Martin Pieuchot","mpi@openbsd.org","Stop abusing the rcvif pointer to pass wireless nodes down to the driver start routines.  Instead add & use a pointer in the pkthdr since we don't want the overhead of using a mbuf_tags(9).","1","11","-12"],["2013-12-07","9403f2f7423fb0fa52245df57d6fbfc01940c9e4","Brad Smith","brad@openbsd.org","#if 0 out the ieee80211_edca_table table to appease the LLVM warning.","1","3","-1"],["2013-12-01","474c63fdb458e91dfe1c2cd79c1fd9e8b7a70db7","Stefan Sperling","stsp@openbsd.org","Reset txrate array index after changing a node's rate list. Should prevent \"bogus xmit rate %d setup\" panics, which I ran into again in IBSS mode. ok kettenis","1","3","-1"],["2013-11-21","f56197f8728453f905bea9e007dc454f9047cfd5","Martin Pieuchot","mpi@openbsd.org","Remove unneeded include.","7","7","-14"],["2013-11-14","47588825e153760188c665e012f555360d890abe","David Gwynne","dlg@openbsd.org","improve maths and conditionals around ticks to cope with wraparound better.","1","2","-2"],["2013-06-11","0f51067caa62ffe220083021679fb44e01a5effc","Theo de Raadt","deraadt@openbsd.org","Replace all ovbcopy with memmove; swap the src and dst arguments too ok otto","1","2","-2"],["2013-03-24","90ef95dcfde0997f93501c60a729d6b4386a03bd","claudio","","Make ieee80211_set_tim() available from outside of ieee80211_node.c so drivers like acx(4) can use that function directly instead of reimplementing the function again. Requested by kettenis@ long time ago.","2","3","-3"],["2013-01-17","1cf4574d4efb090033224fb6df7e583a2c8fb6c1","claudio","","Create a printb() suitable string for IEEE80211_FC1 field. Needed to show more info in tcpdump. OK giovanni@","1","4","-1"],["2012-11-07","833a659bad9c26fa4373d67c371ef34e659f0e24","Stefan Sperling","stsp@openbsd.org","Make the ieee80211_node_incref() macro a static inline function, as its siblings already are. And fix return value of ieee80211_node_decref() which should be unsigned but was signed. diff originally from dhill; ok kettenis reyk","1","14","-9"],["2012-11-07","f6cf7a8b544fb079f800bfaa964d896b99b518da","Stefan Sperling","stsp@openbsd.org","Fix DPRINTF() format string treating n->ni_refcnt, which is unsigned, as signed. diff from dhill; ok kettenis reyk","1","2","-2"],["2012-10-12","631e75925bfc74fafac81edba837d603d34e1cf2","Christiano F. Haesbaert","haesbaert@openbsd.org","Cleanup false positives for uninitialized uses. Part of the work to remove -Wno-uninitialized.","1","4","-1"],["2012-10-10","7243fe63b674e60e3301262e42a482213cbe0df3","kettenis","","Clear the powersave flag and purge queued packets when a node leaves the AP (either by disassociating or by timeout).  Fixes (most) remaining issues with power saving.","1","10","-2"],["2012-10-05","05704373c2e97f94819160dfc6340dbb1ca95483","Camiel Dobbelaar","camield@openbsd.org","Point an interface directly to its bridgeport configuration, instead of to the bridge itself.  This is ok, since an interface can only be part of one bridge, and the parent bridge is easy to find from the bridgeport.","1","5","-5"],["2012-09-20","ab6fd233c6fc94577afc8eaa1f513cf2282f2083","Stefan Sperling","stsp@openbsd.org","Nuke M_80211_NODE #define which mapped to M_DEVBUF and use M_DEVBUF directly. ok henning","1","3","-5"],["2012-08-25","7c9b08b89439c868396151addbd1b08467c57270","kettenis","","Set up ni_savedq for the initial BSS node such that it can actually be used to store multicast frames when one of the associated stations is in power saving mode.","1","4","-1"],["2012-08-17","b02845b8836cb448c84527598cc287dc4704493a","Stefan Sperling","stsp@openbsd.org","Fix possible panic while switching from STA mode into hostap/ibss modes. ieee80211_create_ibss() resets the set of supported rates but failed to update the index into the rate set array accordingly. If the rate configured during STA operation didn't belong to the newly configured rate set the system ran into an assertion (\"bogus xmit rate %u setup\") while trying to create the IBSS. ok fgsch@","1","2","-1"],["2012-07-18","b00081ddcf8786bbe25da65417d5a0e243e3fe4c","Stefan Sperling","stsp@openbsd.org","Print messages about nodes purged from the node cache if hostap/ibss modes are compiled in and the interface is in debug mode. ok sthen","1","4","-3"],["2012-07-16","9e896587308f4a1e35431cdb54df14d9d03af5b4","Stefan Sperling","stsp@openbsd.org","Move increment of ic_nnodes closer to where the node is actually inserted into the cache. Make sure we're at IPL_NET while incrementing/decrementing ic_nnodes. Add a debug message that warns about possible node leaks. All of this affects hostap mode only.","1","26","-3"],["2012-07-16","a703776ed3e68afdcce034c9c4d3bf187db11ebb","Stefan Sperling","stsp@openbsd.org","Fix a couple of possible node leaks in ieee80211_input().","1","10","-4"],["2012-07-13","d5ce23f6f88b828df85b35524b4b3d0204cc8fce","Stefan Sperling","stsp@openbsd.org","Fix wireless scanning on slow systems with a high RX rate and interface in debug mode.","1","69","-32"],["2012-07-13","4ba9517da5f852a259bbd11ad68794529f9bb1da","Stefan Sperling","stsp@openbsd.org","Tweak node cache eviction strategy when the cache is full: kick off new nodes in AUTH state that weren't active during the cache wait interval rather than keeping them for the entire cache timeout interval. Fixes association failures in noisy RF environments. Tested by edd and myself with a slow soekris suffering from RF noise with about of 50 interrupts per second on ral0. ok deraadt","1","12","-4"],["2012-01-25","4ce6e3d2c80d2099506e8e970cebcbb7d2a269ad","Stefan Sperling","stsp@openbsd.org","There is no need to explicitly skip ic_bss when iterating over cached nodes. The ic_bss is never put into the RB tree.","1","1","-3"],["2012-01-25","f415db57f99ce1e9d733246bd740cf85301a81b7","Stefan Sperling","stsp@openbsd.org","Clean inactive authenticated nodes during cache timeout as well. There is no need to keep nodes cached with never associated and were inactive within the last 5 minutes or more. Keeps the node cache pretty clean in my environment with typical city-center wlan noise.","1","4","-4"],["2012-01-21","d89df74a1f181a8fce5ec4082de2ed211cbb93cc","Stefan Sperling","stsp@openbsd.org","Implement missing bits of node inactivity accounting in hostap mode. Small parts of code for this feature were already present but unused.","3","89","-25"],["2012-01-21","2bb245b694fbf43a08dae7a7319c3bf5aa133787","Stefan Sperling","stsp@openbsd.org","Hold interrupts blocked while comparing a cached node's refcount to zero and freeing the node. Just in case an interrupt happens to ref the node after the refcount was checked but before the node is freed. Tested by several as part of a larger diff.","1","3","-3"],["2012-01-18","530f09d410f75937e24f80499f34b1dad5cf3343","Stefan Sperling","stsp@openbsd.org","Don't unconditionally allocate new nodes in the hostap auth frame input path. Check if the node was already cached first. Duplicate nodes aren't reachable from the node cache's RB tree, so they leak and mess up node cache accounting. As more and more nodes leak the global nodes counter keeps increasing, eventually reaching the limit and hovering there. The system then constantly tries to clean the node cache, sending de-auth frames to stations in the process, even if the actual number of associated stations is small. ok jsg@","1","4","-2"],["2012-01-18","2c27e24bd22330e699adf3ca77f74b571655d404","Stefan Sperling","stsp@openbsd.org","Make it possible to free cached nodes which never associated (e.g. nodes only scanning for networks). These were never put into COLLECT state and were thus never evicted from the node cache in hostap mode. ok jsg@","1","4","-2"],["2011-05-04","b2bebb282da611afa3f4744f620d356339261cba","blambert","","Collapse m_pullup and m_pullup2 into a single function, as they're essentially identical; the only difference being that m_pullup2 is capable of handling mbuf clusters, but called m_pullup for shorter lengths (!).","1","2","-2"],["2011-04-05","b5d9e79342dc91f48a13457762fc3036fdf63f94","blambert","","Passing M_WAITOK to mbuf functions is supposed to be a contract between the caller and the function that the function will not fail to allocate memory and return a NULL pointer. However, m_dup_pkthdr() violates this contract, making it possible for functions that pass M_WAITOK to be surprised in ways that hurt.","4","13","-11"],["2011-03-28","ed2b08f594a841545a67d969a475b4b3ea4b1afe","kettenis","","Clean nodes until the number of cached nodes is smaller than the maximum number of nodes, otherwise we'll never actually clean any nodes.  Fixes issues with clients failing too attach because the node cache is completely filled.","1","2","-2"],["2011-03-04","57dfa6b206712799f3b07ab22884b7449bb8e5ad","Federico G. Schwindt","fgsch@openbsd.org","kill is_rx_elem_unknown. damien@ ok. ports checked by sthen@.","2","2","-14"],["2011-03-02","46da23d2047820114af4ef3f6b02dfe5c60c3cf9","Federico G. Schwindt","fgsch@openbsd.org","Allow the kernel to compile with IEEE80211_DEBUG. deraadt@ ok.","2","4","-2"],["2011-02-21","73ce15ad58eeec5b848a078a09043f6c6b544e1e","Stefan Sperling","stsp@openbsd.org","Fix stats about node allocation failures. ok damien; committing with miod's permission (src is soft-locked)","1","1","-2"],["2011-02-21","aac4dd2e4a874ab6ff215e674e758ad016b8b5fe","Stefan Sperling","stsp@openbsd.org","When bridging multicast frames in hostap mode, make a deep copy of the mbuf instead of a shallow copy to avoid problems if the mbuf is modified later (e.g. if the frame is encrypted). From FreeBSD. http://marc.info/?l=freebsd-current&m=114168135819304&w=2 http://svn.freebsd.org/viewvc/base?view=revision&revision=156367 ok damien; committing with miod's permission (src is soft-locked)","1","2","-2"],["2011-01-11","e083c21aefe0d70dc6d8aa86388b9b4db7aff405","Theo de Raadt","deraadt@openbsd.org","for key material that is being being discarded, convert bzero() to explicit_bzero() where required ok markus mikeb","1","5","-5"],["2010-09-29","997b41d8a7f30f708800eb9c363faccf2bad5203","kettenis","","In the implementation of the SIOCS80211DELNODE ioctl, call ieee80211_node_leave() instead of ieee80211_release_node() which screws up reference counting and leads to use after free problems elsewhere in the code.  Since ieee80211_node_leave() is only available if hostap support is compiled in, don't privide the SIOCS80211DELNODE ioctl if we're compiling without hostap support (e.g. on ramdisks).","1","4","-2"],["2010-08-07","5cb57da177a63ad4a7659693dd90fb080a0919cd","Kenneth R. Westerback","krw@openbsd.org","No \"\\n\" needed at the end of panic() strings.","3","6","-6"],["2010-07-28","835b76d60b6a572d950e2341ca879ccce750f933","Theo de Raadt","deraadt@openbsd.org","Suspending drivers need to do as little as possible in here, so when the transition is to INIT, try to not generate management frames if we can avoid it. ok damien","1","10","-1"],["2010-07-20","1c22f80871da3cf3c961871807130383805074f4","Matthew Dempsky","matthew@openbsd.org","Switch some obvious network stack MAC comparisons from bcmp() to timingsafe_bcmp().","4","8","-8"],["2010-07-19","be93212576206e2827ac00db14c728a7ad46cd09","damien","","in hostap mode, notify drivers via a new callback when a STA leaves the BSS. this is needed by drivers that need to maintain a hardware table of associated STAs (like ral(4) RT2860).","2","7","-2"],["2010-07-17","9bc473e1900cd97e38fda496d39cbfe7fcdd543c","damien","","use the correct block ack structure when building an ADDBA response.","1","2","-2"],["2010-07-17","68e05ccb00012fb93bd4096e09973cbd4eafd1f7","damien","","Drop 3rd and 4th clauses from David Young's license.","3","3","-12"],["2010-06-19","d8b713f71b2ae1eec348f536fdef2b161738f1d4","damien","","In ieee80211_node_leave(), clear the associd after calling ieee80211_node_leave_rsn() since ieee80211_node_leave_rsn() calls ic_delete_key() and drivers like ral(4) RT2860 need a valid associd in their delete_key callbacks. This affects HostAP mode only.","1","6","-7"],["2010-06-14","8c8bd18ba620dd7e241f3f33789493078d559467","damien","","fix my previous commit, i forgot BIP, so instead of enumerating what is not supported as a group cipher, enumerate what is supported.","1","5","-3"],["2010-06-14","767560104bafa1ad2e75a3fe95fda3501843d279","damien","","do not try to associate with an AP using an unsupported group cipher, otherwise we will panic in ieee80211_add_rsn_body().","1","4","-1"],["2010-06-07","2f948fe03ccf8b0ff7d9698afebc5578da88e43f","damien","","no need to include <sys/endian.h> twice!","1","1","-2"],["2010-06-07","308c845acc95a5c682b08b125bbe13542dedc48a","damien","","tweak ieee80211_decap(): instead of copying the 802.11 header on the stack and building the ethernet header directly in the mbuf, build the ethernet header on the stack directly from the 802.11 header in the mbuf and copy the ethernet header to the mbuf after stripping the 802.11 header. makes the code easier to read/understand, especially, it is now explicit what is being put in the ether_type field.","1","30","-28"],["2010-06-05","210ddfd2952a0e1c5102c199cc453bb3628cb588","damien","","when rekeying the GTK/IGTK, send the new key to clients, not the old one.","2","17","-7"],["2010-06-05","d1d0fd4f692c39274cd3e33e54471f4f7549c675","damien","","there is no need to copy the full 802.11 header in ieee80211_decap() as we do not use any field after i_addr4.","1","3","-3"],["2010-04-20","bedc816bae8f20a1470e948ec383384128214dc9","tedu","","remove proc.h include from uvm_map.h.  This has far reaching effects, as sysctl.h was reliant on this particular include, and many drivers included sysctl.h unnecessarily.  remove sysctl.h or add proc.h as needed. ok deraadt","2","2","-4"],["2010-03-28","f2fcb9e64f44f564abdff8d69237aff99a205664","Kenneth R. Westerback","krw@openbsd.org","Four uses of uninitialized variables found by clang via jsg@. ar5416, ar9287 and athn are only theoretically interesting. i33380211_node fixes a real bug in occupied channel detection.","1","2","-1"],["2010-02-25","9c066e1e3ac22b7a8eeed2896dfdb1c7f8b43a6f","damien","","fix two comments that i forgot when the SA query transaction identifier changed from 16 bytes to 2 bytes.","1","7","-7"],["2010-02-17","456d9a06876b3d437c6de22cbd83ce2a745cb079","damien","","Do not always create a new node when a beacon or a probe response is received.  The creation of a new node is already handled in ieee80211_recv_probe_resp() when necessary. This avoids creating empty nodes with wrong channels when beacons are received on the wrong channel (overlapping channels). Those empty nodes may also prevent the real node from being discovered because of ieee80211_find_node_for_beacon() filtering.","1","1","-2"],["2010-02-06","4b5a3c59f2e12853b40ec17191f5355eb927ddde","joshua stein","jcs@openbsd.org","when receiving the first message of an rsn group key handshake packet, copy the key out of it properly.","1","2","-1"],["2009-11-23","2e0ed2ace84e3ddcb0e0c57223d99cecab3c0270","damien","","how did i manage to forget that file in my last commit?","1","4","-1"],["2009-11-21","a7ff7d634570cf53390a21a5a788c9f6e145993a","damien","","when wpa is enabled, defer setting the link up until the 802.1X port is valid (keys have been successfully exchanged.) this avoids dhclient timeouts when wpa is enabled.","3","15","-6"],["2009-11-02","a4847fbf57615874d856ce944c96c4b3a2a52896","Igor Sobrado","sobrado@openbsd.org","s/hz/Hz/ on multiples of the SI unit hertz other than MHz.","1","3","-3"],["2009-10-30","fa53b57bf695dab6d12911f20f7ceb35f34f80b3","damien","","missing \\n in log() message.","1","2","-2"],["2009-09-24","ce709cd95f7ad917561f31ad6b1438a905a57b27","damien","","do not call m_free(n0) followed by m_freem(n0) when m_dup_pkthdr() call fails.  this double-free was introduced with the M_DUP_PKTHRD to m_dup_pkthdr change that got committed before I had a chance to review it.","3","9","-21"],["2009-09-13","8439b34d1dc0f3794ca03d2ccb888f879eceee39","Kenneth R. Westerback","krw@openbsd.org","M_DUP_PKTHDR() define -> m_dup_pkthdr() function to properly deal with m_tag_copy_chain() failures.","4","33","-11"],["2009-09-12","f0b4dd65e20d301daa8cef3b3aca3a7f6141cfe5","Miod Vallat","miod@openbsd.org","Correctly report copyout() failure in SIOCG80211STATS ioctl; ok damien@ jsg@","1","3","-2"],["2009-06-06","4fcea0337c680f6a875872cfb462312ff5ada744","damien","","In SIOCS80211SCAN, fail if the interface is not up *and* running. There are cases where the interface can be up but not running, for instance if the driver's if_init routine fails halfway for whatever reason (firmware file not found, hardware switch turned off etc...) This is because in sys/net/if.c, the returned code of the driver is ignored for SIOCSIFFLAGS and the IFF_UP flags is left set. netintro(4) does not say anything about values returned by SIOCSIFFLAGS, so I don't know whether it is the expected behavior or not.","1","3","-2"],["2009-06-03","1757ef0090a72a5bd27bf2d4edf62e4b513cb958","Bob Beck","beck@openbsd.org","make wireless interfaces priority 4 by default. other interfaces remain priority 0.  while we are in here make sure we add wi interfaces to group \"wlan\" in the same way the net80211 stuff already is.","1","2","-1"],["2009-05-24","0848d7e31f4e5649e2cba3a970198a1beaa766b1","damien","","fix prev commit (s/ic_flags/ic_caps/).","1","2","-2"],["2009-05-19","e6accce5599fc59075ba6d7009560039ee8fc36d","damien","","prevent injection of raw 802.11 control frames through bpf on drivers that do not explicitly state this capability (using flag IEEE80211_C_RAWCTL). also, perform all the sanity checks on injected raw 802.11 frames earlier (in ieee80211_output instead of ieee80211_encap).","2","16","-10"],["2009-04-16","201a9062f19e1caa5c756d53cd7f11985bd0d5a1","damien","","make TKIP TSC start at 1 (instead of 0) to match the standard. many implementations (including ours) will drop frames with a TSC equal to 0 (they are considered replayed frames.)","1","7","-4"],["2009-04-14","7799350c737469b7a8334161c358e5f4f25939b2","damien","","do not cache the computed TTAK unless MIC has been verified. this prevents an attacker from changing the TTAK (DoS attack) by sending a frame with a large TSC but with a bad ICV and/or MIC. now an attacker can only invalidate the cached TTAK.","1","12","-10"],["2009-03-26","99f47857cf9292a2536defcaa4b64f7ac37d5a65","damien","","move #define IEEE80211_NO_HT under #ifdef SMALL_KERNEL instead of defining it unconditionnaly. although the HT code is not ready yet, making it compile on GENERIC kernels will help catch regressions/bugs if any.","2","3","-5"],["2009-03-26","d50b229e9ef59d394ce2815e5f649c373f18733e","damien","","sync with 802.11w draft 8.0. the SA Query Transaction Identifier field is now a 16-bit non-negative counter value instead of a 128-bit random value.","4","15","-13"],["2009-03-06","6e28724f0dc99d6ff1c3d0716eb993f039f342af","damien","","Fix setting of the Short Slot Time subfield of the Capability Information field in (Re)Association Requests. This fixes association with APs refusing non-short-slot-time capable STAs. This should also prevent the AP we're associating with to disable the use of short slot time in the BSS as we join. Fix debug message in recv_assoc_resp() while I'm here (s/reason/status/). Scary.","2","4","-5"],["2009-02-15","06c083287c86aaffb72c2a25d73ae74b10595785","damien","","make \"ifconfig if0 chan\" list the channels supported by the device. add \"ifconfig if0 scan\" to scan for access points or to list known stations in Host AP mode. remove the [-]wmm command while i'm here.  QoS is mandatory with 802.11n so there's not much point into making it an option. fix parsing of the \"powersave\" command too.","2","35","-2"],["2009-02-13","7b545f7ab6b51ed99a0e87fe693157795279b93a","damien","","Change ifconfig wpaakms default setting to `psk' instead of `psk,802.1x'. Some supplicants will autoselect 802.1X without giving users the possibility to choose between PSK or 802.1X.","3","23","-20"],["2009-02-08","2809496e5533b41568618674986660518e97426c","damien","","initial 802.11 defragmentation bits. the code will allow the concurrent reception of fragments of three fragmented MSDUs or MMPDUs as required by the 802.11 standard.","2","109","-2"],["2009-01-29","ba665644f9c83761448c56a072bec5815c8ab768","damien","","fix a panic that occurs when IEEE80211_STA_ONLY is defined (SMALL_KERNEL).","1","4","-3"],["2009-01-28","6b48f3bad4f5d87bca4c60116f0d5999c516bac3","damien","","Block Ack agreements are unidirectional. Maintain state for both originator and recipient roles separately. Do not allocate receive reordering buffer in addba_request(). Test the \"initiator\" bit in incoming DELBA frames and set it appropriately in outgoing DELBA frames. Separate callbacks for Tx/Rx too.","8","215","-149"],["2009-01-28","baff8eb8c1f2c2d55dea3b40b4f303bc2d53b613","damien","","In ieee80211_find_node(), roll our own RB_FIND() based on the key (macaddr) instead of resorting to horrid hacks/casts. Restore the ieee80211_node structure back to its original state.","2","22","-10"],["2009-01-27","39264f6c1e2a792be29901760d35155c7d5fbecf","damien","","unbreak SMALL_KERNEL builds by adding missing #ifndef IEEE80211_STA_ONLY","1","10","-2"],["2009-01-26","cad9fdd47658754c4b16fb716848f9e0bd038ea7","damien","","move ni_macaddr field at the top of the ieee80211_node structure. this way we can avoid putting a full node structure (which is huge) on the stack in ieee80211_find_node(). this is a bit tricky but the RB_FIND macro wants an \"elem\" structure, not a field of \"elem\".","2","10","-11"],["2009-01-26","2f4c28bd1b1af5772cbd8f459d3f935c66395f08","damien","","remove ni_ba field from ieee80211_node structure as it is not used yet. this reduces memory footprint and avoids a stack usage warning in ieee80211_find_node() that breaks amd64 build.","2","6","-3"],["2009-01-26","3fc89bb9ffbd573947dc0ae9b309fdfbfb4b4d18","damien","","Add some initial HT bits (not enabled yet) based on 802.11n Draft 7.01: - implement A-MPDU frames buffering and reordering - implement A-MSDU decapsulation - process/send ADDBA Request, ADDBA Response and DELBA action frames - process Block Ack Request control frames (including MTBAR) - implement PBAC support (Protected Block Ack) - add some incomplete HT Capabilities and HT Operation IEs parsing","16","1668","-282"],["2008-12-14","78f94d59f4cc02da3a488322604c24d89a016c5e","jsg","","txpower range checks should be inclusive. From FreeBSD via mickey in pr 6024.","1","3","-3"],["2008-12-14","894c0559fd657ec6da2c59627681958918c6e472","damien","","Add an ieee80211_notify_dtim() function that drivers should call after every DTIM in HostAP mode. Flushes all group addressed MSDUs buffered at the AP for power management.","2","34","-2"],["2008-12-06","fed9a0fa3d1eeddb21dc367383c6976c9a5dcf65","damien","","typo, no binary change.","1","2","-2"],["2008-12-03","a9ccd7fa2f787517df00c4295884498ce82fb2d6","damien","","typos in comments - no binary change.","2","6","-6"],["2008-12-03","9cece38ac81149e831cdc126757dcb6ec591b399","damien","","small fix for IEEE80211_STA_ONLY: do not let users set HostAP specific flags using \"nwflag\".","1","4","-3"],["2008-12-02","41b277db68b879a37d87c5741befa3109e7225c1","damien","","cleanup ieee80211_classify(): retrieve VLAN tag from m_pkthdr.ether_vtag.","1","3","-8"],["2008-11-13","11c56623fc2788034db2482350c3fffcce3b2ce7","Damien Miller","djm@openbsd.org","use different TSCs when sending the two MIC failure report frames to our AP as we enter TKIP countermeasures by caching the TSC of the last frame to fail the MIC; prompted by and ok damien@","2","8","-4"],["2008-11-13","08cdcc85fba16a81e2e5bac4c7b0e5c280bce6f9","Damien Miller","djm@openbsd.org","Mitigate the new WPA attack described in Beck, M. and Tews S. \"Practical attacks against WEP and WPA\". The attack works by using the MIC failure notification messages sent station->AP on MIC failure as an oracle to verify guesses to reverse the CRC.","1","20","-7"],["2008-10-23","b62ed0b095363e21b8492fdd45cd74d686681315","mk","","Prevent a crash in ieee80211_setkeys() when unplugging an interface in hostap mode by canceling the group rekey timeout in ieee80211_node_detach().","1","3","-1"],["2008-10-15","cdec0747fb9fbdf9805bba59e343757b0f42ef71","blambert","","Second pass of simple timeout_add -> timeout_add_sec conversions This should take care of the simpler ones (i.e., timeout values of integer multiples of hz).","2","4","-4"],["2008-10-02","15b639f1db0cf73cd69d3eb0b1749f64f5631833","Brad Smith","brad@openbsd.org","First step towards cleaning up the Ethernet driver ioctl handling. Move calling ether_ioctl() from the top of the ioctl function, which at the moment does absolutely nothing, to the default switch case. Thus allowing drivers to define their own ioctl handlers and then falling back on ether_ioctl(). The only functional change this results in at the moment is having all Ethernet drivers returning the proper errno of ENOTTY instead of EINVAL/ENXIO when encountering unknown ioctl's.","1","3","-7"],["2008-09-28","2d453294073e5043a45bf6e6a3d0b39cc1c84d06","damien","","unbreak the tree. pointed out by deraadt@, Markus Peloquin","1","1","0"],["2008-09-27","08a5b3d69906e0b4c07d32f620ba363a3064a8f9","damien","","Initial implementation of PMKSA caching and pre-authentication. This will be required for future WPA-Enterprise support (802.1X). Add ieee80211_needs_auth() function (not implemented yet) to notify the userland 802.1X PACP machine when an 802.1X port becomes enabled (that is after successfull 802.11 Open System authentication). Add SIOCS80211KEYRUN and SIOCS80211KEYAVAIL ioctls so that the PACP state machine can kick the 802.11 key state machine and install PMKs obtained from 802.1X (pre-)authentication.","13","457","-165"],["2008-09-27","b86af4d65e6acb7ca9705e42880b59157ff6833d","damien","","Add some inline functions to test the presence of optional 802.11 header fields (Sequence Control, Address 4, QoS Control, +HTC) and use them where appropriate.","6","98","-111"],["2008-09-08","c6776a6dee923517d614df4b842d5263dbbca6f0","jsg","","define IEEE80211_STA_ONLY if SMALL_KERNEL is defined to shrink the size of install media.","1","5","-1"],["2008-09-03","544cff2d708adfe4df949f22d521b9df3675f803","damien","","third parameter of ieee80211_get_assoc_req() is a management frame subtype, not a boolean indicating assoc or reassoc. rename the parameter and use if (type == IEEE80211_FC0_SUBTYPE_REASSOC_REQ) instead of if (reassoc). it worked only because IEEE80211_FC0_SUBTYPE_ASSOC_REQ is equal to 0.","1","4","-4"],["2008-09-01","d5bc6f7154539b974ea759d352921979bb0aafe6","damien","","use C99 style struct initializer instead of GCC specific one (from NetBSD). some whitespace cleanup too.","1","10","-10"],["2008-09-01","f96494aa712941bedb90e9e56e002f8b5fd56495","damien","","add ic_tid_noack bitmap to indicate a per-TID ACK policy (1=no ack, 0=normal ack).  all bits are currently set to 0. use this bitmap to set the ACK policy of the QoS control field of outgoing QoS frames.","3","19","-9"],["2008-09-01","ebaf3e451cd2a803b4dc5cc786a7a0fc6ec31f3b","damien","","extend ieee80211_classify() to extract DSCP field from IPv6 packets too.","1","46","-25"],["2008-09-01","fb52043ee6a364c8a018e21fd0d5a5be70ebfe3f","damien","","rework previously unused ieee80211_pwrsave() function, call it from ieee80211_mgmt_output() and ieee80211_encap(). use new IEEE80211_C_APPMGT capability flag where appropriate. rename ic_tim_mcast to ic_tim_mcast_pending.","4","66","-29"],["2008-08-29","28683f5a174f629b875b60b88cea792315fdd42b","damien","","move code to support Frequency-Hopping spread spectrum (FHSS) PHYs to the Attic.  nothing uses it in the tree and it is very unlikely that something will use it one day. the only driver supporting FHSS PHYs in the tree is ray(4) and it does not use net80211.","8","16","-129"],["2008-08-29","dbc5363abf75dc1a36bdb3d6049e1fffd5adf2b5","damien","","garbage collect unused capabilities and configurations flags. add two capabilities flags: IEEE80211_C_HT for HT STAs (802.11n) and IEEE80211_C_APPMGT which indicates the capability for an AP to buffer unicast and multicast traffic for STAs in PS mode. all drivers claiming HostAP support should support that but the truth is that none of them do. most of them are still at the 802.11b-only era and do not update dynamic parts of beacons or process frames from ic_pwrsaveq.","1","3","-4"],["2008-08-28","9997f09e63bcc3272ffed8f2fbfb2302b94b0bfc","damien","","unbreak IEEE80211_DEBUG","1","2","-2"],["2008-08-27","1d0712f78fd1f3eb9b7f017e58319057cc30f4ce","damien","","move definitions of channels attributes away from ieee80211.h such that ieee80211.h contains only definitions that are part of the 802.11 standard and not constants used internally by net80211. because channels attributes are exported to userland through the radiotap BPF interface, add the definitions to ieee80211_radiotap.h too (which must be kept in sync with what is used in net80211). also, do not export combinations of channel attributes to userland so that noone get stupid ideas.","3","47","-34"],["2008-08-27","d1fbfbe5df3eb85804b9b4ae89bfd56f722dcc0a","damien","","add IEEE80211_RADIOTAP_F_FCS radiotap flag from NetBSD.","1","2","-1"],["2008-08-27","9939b87e51297b71a32358549c426e8aa4699f0a","damien","","introduce new IEEE80211_STA_ONLY kernel option that can be set to remove IBSS and HostAP support from net80211 and 802.11 drivers. it can be used to shrink RAMDISK kernels for instance (like what was done for wi(4)). it also has the benefit of highlighting what is specific to IBSS and HostAP modes in the code. the cost is that we now have two code paths to maintain.","12","284","-62"],["2008-08-15","fbac97691196fe5d6b304d301d2ae34043d7c61d","damien","","use LLC_SNAPFRAMELEN here too.","2","7","-7"],["2008-08-14","511502c7d5ac8ddafdbf9ff712cbafe32be3155b","damien","","ieee80211_derive_pmkid() is not used either","1","4","-2"],["2008-08-14","87ede376642a8613d3870c1c3bcba1363bf0db2c","damien","","#ifdef notyet ieee80211_kdf() as it is not used yet (shrink kernel a bit)","1","5","-1"],["2008-08-14","7af4f95456ee66564509681b5745cf1e1d83f13f","damien","","move the HostAP bridge code and the delivery of data frames to ether_input to a separate ieee80211_deliver_data() function. this will later be called by the A-MSDU deaggregation routine.","1","84","-75"],["2008-08-14","e60be9c780f3b8389dbfd2ffb690728c5ac676b7","damien","","in ieee80211_input(), call if_start() after enqueuing frames in if_snd when acting as an access point instead of having each driver doing the job.","1","2","-1"],["2008-08-14","1a29b951a6da1dc3dccce56f1e07a5fe6bdceffe","damien","","put ieee80211_dump_pkt() under #ifdef IEEE80211_DEBUG","2","6","-2"],["2008-08-13","6d6f87857a25385fcabe35114a6791702f4e9768","damien","","one should never use sizeof(struct llc) since 802.2 LLC headers have a variable length.  use LLC_SNAPFRAMELEN instead (which happen to be equal to sizeof(struct llc)) as we only deal with LLC+SNAP headers.","1","14","-14"],["2008-08-13","1c169487ba37c32c6ae7f9fcb87037b019f57581","damien","","do not increment is_rx_eapol_key twice for each frame. fix a test on the mbuf length and one on the descriptor version. remove redundant checking of GTK KDE length.","1","17","-23"],["2008-08-12","02829d8016b730366b7f400b65d03b9b184f2470","damien","","adopt the integrity group cipher of the AP at association time.","1","5","-1"],["2008-08-12","bd303000a6b86a06c6ca235a659a739975772003","damien","","nuke unused fields.","1","1","-5"],["2008-08-12","6b0047352913b9d969fe6b1e0b51ab6f7132fea7","damien","","add the code to encrypt/decrypt management frames, retrieve key id from MMIE etc... this code can't be triggered as no drivers claim MFP capability yet.","3","105","-19"],["2008-08-12","704c420e9c75e62c714f104036c5d36f49974cc6","damien","","reserves the correct number of bytes in ieee80211_send_4way_msg2().","1","4","-2"],["2008-08-12","d4c3b7735bdc1c6cabbebd0b67a8904647831ea5","damien","","clear Tx_Rx protection bits properly.","2","6","-3"],["2008-08-12","a041dc2832a14c749108919b00ded1da9491e6b6","damien","","do not drop frames that have an invalid IE, just stop processing more IEs.","1","5","-5"],["2008-08-12","26678849aa997a67c7136b29e69c92eed76e9a36","damien","","populate ieee80211_recv_action(), does nothing yet.","1","53","-2"],["2008-08-12","c3b8d10907f5ad2d1cd5fa362abf219ef37a7478","damien","","add a couple of new definitions (action frames, new subtypes for control frames, new IEs etc...)","1","37","-4"],["2008-08-12","945063e30434c7391d1a417bc01fe298eda85b83","damien","","missing SHA-256 bits.","1","3","-2"],["2008-08-12","436f9a35aeba9c8222c8fb9ec3884226c1e70e36","damien","","v3 descriptors use AES Key Wrap too.","1","2","-2"],["2008-08-12","d4a8654f3c0246e75f318f109f064d1e3e78a838","damien","","new SHA-256 based AKMPs.","8","62","-24"],["2008-08-12","1c89072992642b2fbb95c11458670e3477a9ee24","damien","","add/process group integrity cipher suite in RSN IEs. add support for MFP negotiation during association.","4","108","-21"],["2008-08-12","833682ccd1c860d8842bb055be49b15e75086b34","damien","","add IEEE80211_RSNIE_MAXLEN and IEEE80211_WPAIE_MAXLEN definitions instead of hard-coding values. for RSN IE, request space for Group Integrity Cipher Suite.","3","40","-14"],["2008-08-12","741a732cbe067830fd884737aa2a8adc1d0c32b2","damien","","add support for EAPOL-Key v3 descriptors (similar to v2 except that the MIC is computed using AES-128-CMAC instead of HMAC-SHA1). add a SHA-256 based key derivation function (not used yet).","2","56","-5"],["2008-08-12","f36a4a57a09ae72a74bfcc6e9edd0b38eb5c8316","damien","","the only integrity group cipher currently supported is AES-128-CMAC.","2","6","-2"],["2008-08-12","0c373a9bff19c845523ba291e3916a2800f2d2de","damien","","generate a random IGTK in HostAP mode if we're MFP-capable.","2","33","-2"],["2008-08-12","29bbe2c893440240da75558409f8b4515321e19d","damien","","add IEEE80211_F_MFPR config flags (management frame protection required) and IEEE80211_C_MFP capability bit (driver supports MFP).","1","4","-1"],["2008-08-12","ee85ef27280406a690a9cc9b6cd3700eea92eb00","damien","","add definitions for RSN capabilities field (RSN IE).","1","12","-1"],["2008-08-12","38c6d5b78052957ff326ea15ae65c3a407c6f0f5","damien","","AES Key Wrap adds a 64-bit MIC to the payload but we pad the content of the frame so that it is a multiple of 8 bytes before encryption. So we must reserve up to 15 bytes in the mbuf for the worst case, not 8.","1","3","-3"],["2008-08-12","06c295cd85b3f22ae3b67e22e94f86dbfed20a8d","damien","","process IGTK KDEs in EAPOL-Key frames and install integrity group keys if MFP was negotiated with the peer (not possible yet).","4","174","-60"],["2008-08-12","888fcb9ceb0cd7f26e972aa56d56d282ab7c1c60","damien","","extend the ic_nw_keys[] array to 6 elements. indices 0-3 will be used for group data keys while indices 4-5 will be used for integrity group keys. add a ic_rsngroupmgmtcipher field too.","2","33","-28"],["2008-08-12","aef8fd21615e4fdabf359da4c65e431db5d50d20","damien","","in a near future, unicast management frames will be encrypted/decrypted using CCMP.  use the right replay counter in this case.","1","5","-2"],["2008-08-12","2877165a26b2879e1713d432154000781efcf905","damien","","Change the way we process EAPOL-Key frames. Free the mbuf in the ieee80211_eapol_key_input() function. Do not assume the frame is contiguous, call m_pullup2() if it is not. We need the frame to be contiguous to process KDEs efficiently in EAPOL-Key frames (just like we process IEs in management frames). However, there are drivers like upgt(4) that use m_devget() in the RX path.  m_devget() can return fragmented mbuf chains. Notice that we should do the same m_pullup2() for management frames. This will be done later. Remove the ic_recv_eapol callback.","5","41","-27"],["2008-08-12","df0b96cbd6815bcc5fe79d177d554608bbd9e5c2","damien","","add new IEEE80211_CIPHER_AES128_CMAC cipher and new key flag IEEE80211_KEY_IGTK. lot of cleanup while i'm here (indent function prototypes). change license since this file was completely rewritten.","1","80","-92"],["2008-08-12","2fe942a178eb8f13f41d4daed27a3c7dfb2e1535","damien","","Welcome BIP: the Broadcast/Multicast Integrity Protocol defined in Draft IEEE P802.11w. It provides data integrity and replay protection for broadcast/ multicast robust management frames (not used yet) using AES-128 in CMAC mode.","4","239","-3"],["2008-08-12","edd172b5b422e4b24bb05ace206214f5ab5337db","damien","","maintain a count of TKIP and CCMP replayed frames. some cleanup while i'm here.","4","31","-18"],["2008-08-12","28a8bfdc51f2ed60c78acdd516983acb7de3f6fd","damien","","add replay counter for management frames.","1","2","-1"],["2008-08-12","bf270b3284b155a5fa2ea9ed9b1e863c2f1e8597","damien","","fix values for QoS control field.","1","6","-6"],["2008-08-12","e3920db4be5dd44d66c43353462f12394c2350b7","damien","","retrieve the TID from QoS frames to use with the appropriate replay counter.","2","49","-9"],["2008-08-12","1c3dea25e49f0bd3d127964743cf20bddef1cdc5","Henning Brauer","henning@openbsd.org","use MINCLSIZE to decide wether we need to allocate an mbuf cluster instead of MLEM, damien ok","3","9","-9"],["2008-08-12","68f90f8d497798cf7dd04af895fc4f0d7f60e476","damien","","get rid of the map_ptk()/map_gtk() functions, just inline them which makes things easier to track.","5","76","-80"],["2008-08-12","a6f744cfc785f9dce665405e28c585098df6f215","damien","","simplify ieee80211_derive_ptk() prototype. pass the AKMP so we can support other key derivation functions in the future.","3","17","-20"],["2008-08-12","2cb6ca3186c0f9375b0bc7450594fe87d584a8fa","damien","","use HMAC-MD5, HMAC-SHA1 and AES Key Wrap sys/crypto/","1","78","-231"],["2008-08-02","3c6da1f0ede3b7f62c0aba14c23efe9636e2776c","damien","","do not use IEEE80211_QOS_TID.  its definition in ieee80211.h is wrong.  hard-code 0xf for now.  will be fixed post-release.","2","5","-5"],["2008-08-02","35ff5d2d045250930678277e3b5e36da1412dca6","damien","","do not touch m after it has been enqueued with IFQ_ENQUEUE(). copy m_pkthdr.len and m_flags before and use that after to update the statistics.","2","13","-10"],["2008-08-02","8b11e005f977ee2970b36e2d49953dcd443afac5","damien","","print the correct value in a debug message.","1","4","-4"],["2008-08-02","28fe012284abb06001d23dbd76afa250920f4865","damien","","typo in a comment. no binary change.","1","2","-2"],["2008-08-02","d4da7e32254d5db04988c3d319ab0742ae66aaf1","damien","","Drop frames that are received unencrypted when WEP is on or when WPA is on and RX protection for TA is on. Keep track of the TX/RX protection for each node when WPA is on.","5","43","-17"],["2008-07-28","be646e72936195ca6f53efcaa439de737d6b04a6","damien","","ignore PS mode changes and PS-Poll from non-associated STAs. keep track of the number of associated STAs in PS mode.","3","28","-26"],["2008-07-28","641b6c350cf268ed1f474b0c96f45b43cec92c4b","damien","","missing \"goto err\". fix IEEE80211_DEBUG builds.","1","6","-5"],["2008-07-27","3f31f479ad34679f92f7360634cf24b6a6239b08","damien","","sanitize RX path a bit. make sure drivers pass a contiguous header, check header length earlier. fix checking of frames sequence number for frames containing an Address 4 field (required for future work). fix processing of control frames (only pspoll for now).","3","137","-159"],["2008-07-27","516fea64984c29d4399837928a41d956317e5a28","damien","","s/IEEE80211_DPRINTF/DPRINTF/ automatically prepend __func__ to output.","9","152","-203"],["2008-07-27","2122ac3029b0f624a7e28edd8a8b0e4ae043082d","damien","","remove unused structures and duplicated definitions. remove clause 3 of license while I'm here (from FreeBSD).","1","70","-143"],["2008-07-26","6fc7fa0a161e0748887f33fbd43e3d734a3a29bf","damien","","shrink ieee80211_set_link_state().","1","7","-66"],["2008-07-26","aa88352b285f018b3df38de4a36086c5287e37f1","damien","","remove useless #includes.","1","1","-4"],["2008-07-26","9b7ddacb019c0b919170616491648eb67d924a45","damien","","properly handle management frames (required for future work). remove useless #includes.","1","27","-16"],["2008-07-26","cbeac68aa8ed83da99e519cee1e558b3b5b2f099","damien","","call Phase1 every 2**16 frames instead of calling it for every frame. properly handle frames with an address 4 field (required for future work). remove useless #includes.","1","18","-14"],["2008-07-23","ddf8df234a538063143883a4b752b25ffb7f5f80","damien","","Fix a blatant misuse of MINCLSIZE I introduced in ieee80211_output.c r1.59 The bug was added on 04/16 but it started to show up only after 06/12 when the value of MINCLSIZE was changed to something different from MHLEN + 1.","2","4","-4"],["2008-07-21","52c390cd9751e9bf088c24d216519914380f2548","damien","","add ieee80211_priv.h file: contains definitions private to net80211. this must not be included by drivers.","12","120","-96"],["2008-07-21","138c20340cf5025904eb473435ffdf2513a2e588","damien","","move processing of EAPOL frames away from ieee80211_{input,output}.c","5","1531","-1447"],["2008-07-21","91cfc5034e5470770f0bf5d5f4706915a328da3a","damien","","instead of passing rx tstamp and rssi to the ieee80211_input function, pass a pointer to an ieee80211_rxinfo structure containing those two fields plus an extra flags field that indicates whether the frame was decrypted by hardware or not. required for a future fix.","4","51","-45"],["2008-06-16","f3ce1da8b08991440c2bc3c2a0c613766dfa9c06","damien","","remove now useless casts since the rijndael_* protos have been constified.","1","3","-3"],["2008-06-09","84ee3466e5108dc1cb41f29582ce2c3eddad6d89","Damien Miller","djm@openbsd.org","rename arc4random_bytes => arc4random_buf to match libc's nicer name; ok deraadt@","3","8","-8"],["2008-04-26","7159f29a268cbe3c07de754cb88ba1492f8d1430","damien","","move things from ieee80211_ifattach() to ieee80211_crypto_attach().","2","14","-15"],["2008-04-26","ed2eecce47bb7327e90165e0e4ab152b29a64a08","damien","","small optimization of TKIP mixing phase 2 (for little-endian architectures).","1","19","-16"],["2008-04-26","f48f0ab87805218c182ebdbec4cc9f28dfede88c","damien","","unbreak hostap mode. do not parse RSN IE from beacons/probe responses if not scanning.","1","14","-14"],["2008-04-21","f0a0d759c0fa09b16edb955c93c55e2c84f0558f","damien","","move ieee80211_ibss_merge() from ieee80211_input.c to ieee80211_node.c","2","104","-105"],["2008-04-21","1ede98c043f61dcca8e84d245785a58141f0a7d2","damien","","move ieee80211_auth_open() to ieee80211_proto.c move ieee80211_setup_rates() to ieee80211_node.c move some prototypes from ieee80211_proto.h to ieee80211_crypto.h","6","144","-143"],["2008-04-21","e4dd269243b2203ba5823a3db1111df81270d0a5","damien","","refuse association requests containing a wildcard SSID.","1","4","-4"],["2008-04-21","ee4d3710b1eccf4031dfe8e36bc913ea259e3c2f","damien","","- do not process ethernet PAE frames if RSN is not enabled - add a ieee80211_recv_action() function (will be used later) - some cleanup, remove unused prototypes, get rid of the   IEEE80211_VERIFY_* macros","3","120","-125"],["2008-04-21","44b9bfcc0127688953ebfdfcc34076f796fe2599","damien","","Some WPA1+WPA2 APs include both a WPA and an RSN IE in message 3 of the 4-way handshake, regardless of what protocol the supplicant is using. Ignore the IEs we don't care about instead of deauthenticating with a reason code of 'RSN_DIFFERENT_IE'.","1","15","-5"],["2008-04-18","aee442250cf30a8f6138e76dab1fdff6c059847c","Damien Miller","djm@openbsd.org","extend the if_ethersubr.c crc functions to support updating a running crc in addition to the existing \"oneshot\" mode and use them to replace ieee80211_crc_update() with the new ether_crc32_le_update(). Saves 1k kernel bss + some code.","4","10","-61"],["2008-04-17","4a7ff21054aac7b12745a6416cb3118c5dade66f","damien","","call ieee80211_crc_init() only once, when the first 802.11 device attaches instead of at every attach.","1","11","-5"],["2008-04-16","b8f09c0551e716b41e4cb35e9281937f089c9931","damien","","Kernel implementation of the 4-way handshake and group-key handshake protocols (both supplicant and authenticator state machines) as defined in the IEEE 802.11i standard.","16","3201","-1217"],["2007-11-25","f4228ed48df7bc635a9fc06dd2879cc1abb7b81c","Brad Smith","brad@openbsd.org","return ENOTTY not EINVAL for an unknown ioctl.","1","2","-2"],["2007-11-17","9f58483cc42a1322ec4b34682284af9b562551ed","damien","","make it clear in the code and in the man page that the rate2plcp and plcp2rate functions use plcp codes in most-significant-bit-first format (R4-R1). some drivers like wpi(4) and iwn(4) want plcp codes in lsb-first format so they can't use those functions. also the IEEE standard uses R1-R4 notation so this can be a bit confusing for those refering to it.","2","10","-9"],["2007-11-14","d87c1c44f7b6b78eb63d45aca9d78465f1c2bfdb","Marcus Glocker","mglocker@openbsd.org","Add ieee80211_rate2plcp() and ieee80211_plcp2rate() functions, which convert the PLCP header signal field to a rate value and vice versa.","2","75","-2"],["2007-11-03","01e4af278a5b167de754c3d7f03ab1a625dfd4b6","Marcus Glocker","mglocker@openbsd.org","Revert last commit which added ieee80211_rate2plcp() and ieee80211_plcp2rate() because I've got a late feedback from Damien that he dislike the implementation method a lot.","3","6","-53"],["2007-11-01","87239cc3e4b0da87b3bda55ed09947cf01e312a0","Marcus Glocker","mglocker@openbsd.org","Add ieee80211_rate2plcp() and ieee80211_plcp2rate() functions.","3","53","-6"],["2007-10-29","1b8bfe8e69e3c1066b3893f6ccff8ace1c987830","Charles Longeau","chl@openbsd.org","MALLOC/FREE -> malloc/free","2","7","-7"],["2007-10-08","d079075a497f2b2bff28fa6addb4e705bd9ededb","Marcus Glocker","mglocker@openbsd.org","Get trunk(4) working again with 802.11 devices.  Spotted by ajacoutot@.","1","86","-1"],["2007-09-18","d1a4d9a66fa6a65eff7b5ab9710edf5f3cb8044e","Damien Miller","djm@openbsd.org","arc4random_bytes() is the preferred interface for generating nonces; \"looks ok\" markus@","1","2","-2"],["2007-09-15","85058a5a408bc6c8be4e159402da185fd9b97454","Kenneth R. Westerback","krw@openbsd.org","realy -> really in comments. Most reported on tech@ by Jung.","1","2","-2"],["2007-09-11","42a2b0dff0651a4a9e17a24eefdbd4445e5af6cc","damien","","remove horrid casts now that SHA1Update() has been constified.","1","3","-3"],["2007-09-07","3d8924c37983766c49202f7a496e97e36b8d4049","damien","","use new malloc M_ZERO flag + replace MALLOC with malloc","1","8","-15"],["2007-08-29","2457310daaf9ccb65f1bc89b867c4571df8ab5e1","damien","","typo in a macro (fortunately unused): 0c00 -> 0x00","1","2","-2"],["2007-08-29","7913c88f49cc37467af845e202292fb9978b4153","damien","","- use ieee80211_get_hdrlen() where appropriate. - discard all EAPOL-Key frames with an unknown descriptor version. - when receiving message 3/4 of the 4-way handshake, do not install   the PTK if the INSTALL bit is not set. this fixes 4-way handshake   with APs using group keys only. - similarly, do not mark the 802.1X port as valid if the SECURE bit   is not set (it will be marked as valid after group key handshake).","2","59","-44"],["2007-08-27","6748fe78335e293b95373ee811cc050fd489be3f","damien","","rework ieee80211_recv_4way_msg2() function. add some RSNA authenticator state machine bits.","3","101","-49"],["2007-08-27","9ef5120717f3ad0be4571f5525fcec0a3a9348d3","damien","","Checking the MIC early in ieee80211_recv_eapol() does not work for message 2/4 of the 4-way handshake because the authenticator must derive the PTK first (the MIC is computed using the KCK). Move calls to ieee80211_eapol_key_check_mic() - and as a consequence ieee80211_eapol_key_decrypt() - directly in the ieee80211_recv_{group,4way}_msg*() functions. Unconstify the first parameter since checking the MIC modifies the frame. Remove ni->ni_ptk_ok field while i'm here.","3","68","-51"],["2007-08-23","bf2dd7920ba856705c03b853c62dabdf984c0b85","damien","","add a new ieee80211_save_ie() function to make a copy of an information element in a management frame. the authenticator has to make a copy of the RSN/WPA1 IE from (Re)Association requests so that it can be compared with the one included in message 2/4 of the 4-way handshake.","1","19","-1"],["2007-08-23","7e3236b27b177e22244657d8db66b762d0295a89","damien","","add ieee80211_get_hdrlen() to compute the size of the 802.11 header of a management or data frame  (check if the i_qos, i_ht or i_addr4 are present).","2","28","-2"],["2007-08-23","905a958273531cbb1b907a74c7a9ae4552e1bf61","damien","","the authenticator can't differentiate 4-way handshake message 2 from message 4 based on the EAPOL-Key frame secure bit. the only thing that differentiate these messages is the presence of the RSN/WPA1 IE in the EAPOL-Key frame data field. only message 2/4 contains this IE.","1","17","-19"],["2007-08-23","f53450c85db0ab397da93497b2ba26f654e8aab7","damien","","add pseudo-header definition for TKIP MIC computation.","1","9","-1"],["2007-08-23","0e2c1be0ec633a66f9b457ce7fdd61e21c78b5ce","damien","","fix ieee80211_map_ptk() for TKIP.","1","2","-2"],["2007-08-22","797f37c86f4af060a6059ae72239beb826c3716d","damien","","add a ieee80211_get_txkey() function to determine the key to use for transmitting a frame to a given node. change ieee80211_encrypt() so that it now takes the key as parameter. this change is required because drivers doing hardware crypto need to know what key is being used.","2","14","-13"],["2007-08-22","e36f5321c9aa81593dffdb35e99554533776737b","damien","","- add k_rxmic and k_txmic fields to struct ieee80211_key to store the   Tx/Rx MIC for TKIP. - add two functions to map a PTK and a GTK to an IEEE 802.11 key and   use them in ieee80211_input.c instead of duplicating the same code.   properly set Tx/Rx MIC in the IEEE 802.11 key in the case of TKIP. - add ic_psk to struct ieee80211com to store the pre-shared key. - fix setting of the SECURE bit in outgoing EAPOL-Key frames. - when receiving msg 2 of the 4-way handshake, deauthenticate the   station if the RSN IE does not match that of the (Re)Association   request. - before parsing an RSN or WPA IE, check that there's enough room for   the version field (2 bytes) which is mandatory. - various tweaks while i'm here.","5","148","-97"],["2007-08-16","a88be697db65efab65512a90e2fe838353d2f0da","Theo de Raadt","deraadt@openbsd.org","back out part of last diff; breaks all hardware wep decryption. from damien","1","0","-3"],["2007-08-14","2377a5f1abbc8a503a2d8ce0c912cd9decf3e867","Alexander Bluhm","bluhm@openbsd.org","Prevent sneaking in unencrypted packets into WEP traffic. ok damien@, put it ok deraadt@","2","6","-2"],["2007-08-05","0c740d760270c8b5ca3088afc0d8d9bf17a1d92b","claudio","","Fix the length calculation of the TIM bitmask in ieee80211_add_tim(). Even no bit was set we copied the full 225bytes bitmaks into the beacon. Found the hard way with acx(4) by mglocker@ and myself. OK mglocker@ damien@","1","2","-2"],["2007-08-03","b5c5cfd698b774bee6a95b4678a08705aecbfc67","damien","","fix parsing of GTK KDE.","1","5","-4"],["2007-08-03","635572a47c8a2376567b88088596988cc1a87c00","damien","","add a ni_eapol_desc field to struct ieee80211_node to know whether a station is using WPA1 or RSN descriptors. make sure that a station that advertises WPA1 capability in an IE uses the WPA1 EAPOL-Key descriptor type and not the RSN one. fix construction of EAPOL-Key frames for WPA1. i can now successfuly complete a 4-way and group-key handshake with both a WPA1 and a WPA2 access point. add some TKIP encapsulation code (no SW crypto yet).","5","187","-49"],["2007-08-01","803820d00efb58e837a42e50aa32a945e6feb6da","damien","","allow ic_set_key to be NULL so that drivers won't need to implement it (for instance if they don't support HW crypto).","1","7","-6"],["2007-08-01","e5a5ec8776d95ad8a357dc9ea0802755d193ad47","damien","","make sure the MIC field is set in group key handshake messages before passing the frame to the handlers.","1","3","-1"],["2007-08-01","e9dafa3cc4cd4f5f61d214542a71f34b6ab5a0fa","damien","","make ieee80211_recv_wpa_group_msg1() install the GTK in ic_nw_keys[] too. i only converted ieee80211_recv_rsn_group_msg1() in my previous commit.","1","15","-12"],["2007-08-01","444b1fdc4504a3d1ffb0ef4fdf9b50401cc3ddb9","damien","","add generic ieee80211_encrypt() and ieee80211_decrypt() functions that can handle multiple ciphers (the key to use is determined automatically by these functions based on the frame's destination address). add ieee80211_ccmp_encrypt() and ieee80211_ccmp_decrypt(). those two functions only do encapsulation/decapsulation of CCMP frames for now (they don't do SW crypto). they will help to test things with drivers that can do HW crypto. add a ni_pairwise_key field to struct ieee80211_node to actually install the pairwise transient key. install the GTK in ic_nw_keys[].","4","207","-40"],["2007-08-01","2d439f7e5a5c15cd46f4b6bd149e0dd13e901496","damien","","unbreak.","1","2","-2"],["2007-08-01","cbb53a69c30e449248188b70822fa458bdaca371","damien","","check the key length field in message 3 of the 4-way handshake. change ieee80211_recv_eapol() so that it is called without the ethernet header striped.","1","8","-4"],["2007-08-01","df2c2083c88235d7b4bf7fa47f205b0b2ed3aa89","damien","","set key length field in message 1 & 3 of the 4-way handshake.","1","9","-3"],["2007-08-01","e7180164dcb125c8e750a7514bd0bcb48ed6a0ef","damien","","group key handshake message 1 is very different between RSN and WPA1. RSN uses a GTK KDE while WPA1 stores the GTK in the EAPOL-Key frame data field (encrypted) and uses some bits in the info field. split ieee80211_recv_group_msg1() in two separate functions.","2","66","-9"],["2007-08-01","9b193f2e987b21803179daadfc473a433c18e67b","damien","","pass the supplicant's nonce generated on reception of message 1 of the 4-way handshake to ieee80211_send_4way_msg2().","3","8","-7"],["2007-08-01","1a5f9e28f54cea880f736548212ead1b957bbb2d","damien","","in 4-way handshake messages 2 and 3, parse vendor-specific WPA1 IEs too. fix a test for ni_replaycnt_ok while i'm here.","1","19","-2"],["2007-08-01","079f1120a7941a7cdb70d853ea99b8cc410b4ddf","damien","","add a TSC field to the key structure. it will be used to store the TKIP sequence counter (TKIP) or the PN (packet number, CCMP).","1","3","-2"],["2007-08-01","c7d873b3dcb658f3b7cf2381924b45136ef9037a","damien","","PMKID KDE is optionnal in message 1 of the 4-way handshake (at least when using WPA-PSK). add a ni_replaycnt_ok flag to struct ieee80211_node to mark the replay counter as valid.  the replay counter is marked valid only when message 3 of the 4-way handshake is received since message 1 contains no MIC.","2","10","-6"],["2007-08-01","9d5eb8e4a5f26405f34877f7e8914874a3dfb7ed","damien","","fix parsing and construction of RSN/WPA IEs.","2","5","-5"],["2007-08-01","4c4c3a6c361a95e085a4289a363a8f4e6f2922a0","damien","","all WPA implementations i have tested use EAPOL-Key frames version 1, so use that too and remove a check in ieee80211_recv_eapol(). WPA1 stores the group key id into bits 4-5 of the EAPOL-Key frame info field and uses bit 6 to indicate if the key is Rx/Tx or Rx only. remove a check in ieee80211_eapol_key_decrypt() because WPA1 encrypts the payload of message 1 of the group-key handshake without setting the encrypted bit in the info field.","3","8","-9"],["2007-08-01","5f9948a94f6db6ad58193865aaacec6691c0df8f","damien","","the EAPOL-Key MIC must be computed with the MIC bit set. this simplifies ieee80211_eapol_key_mic() and ieee80211_eapol_key_check_mic() quite a bit. set the EAPOL-Key body length before computing the MIC since the MIC is computed with the 802.1X header too. add a missing htons() while i'm here.","2","13","-35"],["2007-08-01","5866773d2178775061c1c2f24bde58fad4eb0673","damien","","KEYACK bit is not set for 4-way handshake messages 2 and 4. it is set in message 3.","1","2","-2"],["2007-08-01","7eb6a50966c2365b14aa3d81c6aba68065ba784e","damien","","cipher suite type for CCMP is 4 not 3.","2","5","-5"],["2007-07-28","9540a0617dc7a8c67492ca7ef2df103b81a381dc","damien","","adds functions to parse and to build EAPOL-Key frames used in the 4-way and group-key handshake. the state machine is still missing though so this is not used anywhere yet.","4","1062","-8"],["2007-07-28","5a3d2cbc5db644cc83238d12239342587e829972","damien","","add callbacks that drivers must implement to install/reset keys. add a 64-bit replay counter for sending EAPOL-Key request frames. add a ic_recv_eapol callback to process EAPOL frames. drivers can redefine this callback but net80211 will implement it.","1","9","-1"],["2007-07-28","b89800ae28e2fb7c6c3babb8dd64538fc5f62d3a","damien","","add a couple of fields to the ieee80211_node structure to manage RSN states. those fields will be put in a separate structure (ieee80211_rsna) in a future cleanup phase to save some space.","1","10","-1"],["2007-07-28","1cab690ffd8dd642bde04de8420f9e30c74717ce","damien","","extend the ieee80211_key structure with a key identifier, a flags field and a 64-bit receive sequence counter (for group keys). add a ieee80211_cipher_keylen() function to retrieve the key length in bytes used by a specific cipher. account for 802.1X header size when computing the Key MIC. some cleanup in comments and variable names while i'm here.","2","48","-20"],["2007-07-28","689940e8f02925d0f0f684a47ff330e8a0555b48","damien","","WPA1 uses its own (non-standard) EAPOL-Key descriptor type. Remove a double definition. Add definitions for Key Data Encapsulations.","1","17","-4"],["2007-07-24","496b381146a0b49dc750ee54f702edc79e342080","damien","","new function to check the MIC of a received EAPOL-Key frame.","2","27","-2"],["2007-07-24","449ff67ce2cb9a186ce4a30fda26b06769a2ecdc","damien","","use rc4_skip(). fix ieee80211_eapol_key_encrypt() so that we don't add more padding bytes than necessary in the case of AES Key Wrap encryption.","1","4","-8"],["2007-07-24","aee58d4e00869ab1d79747c00136cf745f772b48","damien","","remove some unused key derivation functions. we won't support PeerKey handshake in a first time.","1","1","-66"],["2007-07-24","c55c8f4c8e1af47aa4e92babda9519cdf6fcd2ee","damien","","remove arc4_ compatibility macros.","1","8","-11"],["2007-07-24","cad3b616e3ca261755222b0e23e78da8a2a0fffa","damien","","add functions to compute EAPOL-Key Key MIC fields and to encrypt/decrypt EAPOL-Key Data fields.","2","153","-2"],["2007-07-24","f6051d96828f64162a438b71079b81c3031e3b4e","damien","","add ic_globalcnt to struct ieee80211com: in an RSNA, each STA must maintain a 256-bit global key counter that must be initialized to a random value (see 8.5.7).","2","8","-5"],["2007-07-24","b69da89bc9e1945948f50920b14313bc3efb4cd0","damien","","cleanup definition of struct ieee80211_eapol_key. prepend 802.1X header. use byte-arrays to prevent access to unaligned fields.","1","34","-23"],["2007-07-18","c752501bbf46a53a35e7a9395421de37ab496afc","damien","","modify ieee80211_aes_key_wrap() to support in-place encryption. explicitly use ovbcopy() even if our kernel memcpy() supports overlapping buffers.","1","3","-4"],["2007-07-18","21b3f5c1f204a3b40e4804ca319e34f8fd99a553","damien","","add AES Key Wrap algorithm (see RFC 3394). this will be used to encrypt/decrypt EAPOL-Key frames payload.","1","75","-1"],["2007-07-18","cb1bb37c9424833b74d601e5a556e0f45df31ca1","damien","","replace the ieee80211_wepkey structure with a more generic ieee80211_key one that can be used with other ciphers than WEP.","4","54","-46"],["2007-07-14","ee33515d32ba5fd1f69523c8c54193d9bc8fb58d","damien","","s/uint8_t/u_int8_t/ for consistency.","1","21","-21"],["2007-07-14","b7bf3400bfc481b4479810337416891717722808","damien","","update QoS Tx/Rx sequence numbers for each TID. add a parameter to ieee80211_decap() to handle different 802.11 header sizes. cleanup and clarify ieee80211_classify().","4","90","-67"],["2007-07-13","c4e2420e6c66d2b0d96cf39f17db9c8e951cc622","damien","","do not increment ic_stats.is_tx_nombuf in ieee80211_get_rts() and ieee80211_get_cts_to_self() if mbuf allocation fails.","1","9","-11"],["2007-07-13","5779b17ab3eb9839ce57395892f37db6ae99fe79","damien","","cleanup parsing of beacon and probe response mgmt frames.","1","12","-26"],["2007-07-13","c19ba617dbe57f556aef48122e1f44706279768d","damien","","in ieee80211_recv_assoc_resp(), do not start updating the node structure until the frame has been fully validated.","1","7","-9"],["2007-07-13","2c456c77a04047e2301c3095e8a6fdf9e924893b","damien","","change the way we parse IEs to make sure we never read past the end of the rx buffer.","1","46","-28"],["2007-07-13","f0811c38f0955be6061b57d36455ab7614def72f","damien","","properly check ieee80211_setup_rates() return code. some cleanup while i'm here.","1","40","-39"],["2007-07-06","b4df76bc2fd216b889b89d396c95da228329f0e5","damien","","have ieee80211_parse_rsn() return a reason code so that we can deauth associating stations with bad RSN IEs. cleanup parsing of vendor-specific IEs.","2","64","-49"],["2007-07-06","8c1310e22549c54dc8f3b30e1a25b2243d22d290","damien","","cleanup the computation of mgmt frames sizes. still very ugly but hopefully correct.","1","48","-72"],["2007-07-06","36845087545d3c9faa9f911b3751f3ad851cb951","damien","","remove remaining bits for pre-RSNA shared authmode support. it has been #if 0'd since 3.9 and we have never supported this mode (no ifconfig option etc...).","5","9","-248"],["2007-07-06","18db3d5922ce642faa8bdc4f40bd91a47b6b66e0","damien","","don't check the IEEE80211_CAPINFO_PRIVACY bit in (re)association requests. the spec says that \"APs ignore the Privacy subfield within received Association and Reassociation Request managements frames\". if the IEEE80211_CAPINFO_ESS bit is not set, reply with the correct status code (IEEE80211_STATUS_CAPINFO instead of IEEE80211_STATUS_BASIC_RATE). indent things a bit while i'm here.","1","7","-17"],["2007-07-06","483b6fb7546e48144e72b4540c7dd7da34975bab","damien","","initialize an unitialized variable.","1","2","-2"],["2007-07-05","e0d673f6a653ebd5c5107abf43fbae817724d4c0","damien","","always set the IEEE80211_CAPINFO_ESS bit in association requests. fixes my 1.36 commit (the bit should not be set for non-AP STA only in Probe Responses and Beacons).","1","2","-7"],["2007-07-05","51968a65f9351159be0d4571dda4d7a338b18116","damien","","some HT frames may have an additional HT Control field. remove two comments that were misplaced while I'm here (addr4 is always located after the i_seq field, not at the end of the header).","1","26","-6"],["2007-07-05","b3974a2b137b1b17371b17a325df1fa38f0c2eaa","damien","","move the logic of determining whether an extended supported rates IE is needed or not to the callers (instead of doing nothing in add_xrates).","1","32","-20"],["2007-07-05","d5890e5e0eaa1799bfb098bc4a8fe7918ef0327a","damien","","split ieee80211_add_rsn() so that the code can be reused for vendor-specific IE.","3","64","-18"],["2007-07-05","f1b095d5f049058a73e02952ca1144eac58005dc","damien","","add myself to the copyright list.","1","2","-1"],["2007-07-05","ee17167cebe315507763c51dad8a7e06f99c2a61","damien","","add the pseudo-random function (PRF) and various key derivation functions defined in 802.11i.","2","307","-4"],["2007-07-04","04c9b480304ebb0e6acc80f90548dbe36a6cd3f9","damien","","add subtype \"Action\" for management frames.","2","7","-14"],["2007-07-04","ab7547d9a78827bf493f573d8773caa00b4e1b82","damien","","ignore WMM vendor IEs that are not parameter sets.","1","11","-11"],["2007-07-04","db7098491c35b0966b595edf0b93abc9856c2458","damien","","allow USEGROUP as the pairwise cipher for RSN IE. add RSN IE to beacons, probe responses and (re)association requests.","1","19","-5"],["2007-07-04","f7576f1a44da10b2aa30b8181b7220c14de6c1f1","damien","","add RSN flags for ic_caps and ic_flags.","1","4","-2"],["2007-07-03","071ad7c6bcc1120e07cd2b1333878852c0cf9690","damien","","maintain the traffic-indication (TIM) virtual bitmap by defining a default ieee80211_set_tim() function that drivers can override by setting ic_set_tim.","5","39","-35"],["2007-07-03","44a3f304cdaed7e9b4ffa2a1d63d3f6b9e3bdf47","damien","","add a function that builds an RSN IE (ieee80211_add_rsn).","3","91","-4"],["2007-07-03","61eb33324e13d9ff58fa681e17591597658f5816","damien","","fix kernel builds with IEEE80211_DEBUG enabled.","1","34","-29"],["2007-07-03","d1eea711a64e79cf928ed637fea400e57519b142","damien","","move construction of IEs into individual functions so that we don't duplicate the same code multiple times. add references to the spec for all these functions. fixes beacon_alloc() for FH PHYs as a side-effect.","2","219","-178"],["2007-07-03","594ced39404baec4e1e418f6e63c5edbf8ab1ee1","damien","","don't set the IEEE80211_CAPINFO_ESS bit in the Capability Information field if we're not operating as an AP (see 7.3.1.4).","1","13","-9"],["2007-07-03","6e8c91119efb65420a3d6a025664f9522f9af93a","damien","","no TIM in probe reponses.","1","1","-9"],["2007-07-03","e7f727b3f2a2f016f15e4d577246b6baa471b3b6","damien","","In ieee80211_getmbuf(), if we need to allocate a mbuf cluster because the length is greater than MHLEN, test that the allocation succeeded. Otherwise, free the mbuf header and return NULL. Callers assume that if the function returns a value != NULL then enough space has been allocated.","1","5","-2"],["2007-07-03","3cbc8f41468b03ad95281b929129ee78c07ef4d4","damien","","fix SSID IE in the case where HIDENWID is used. HIDENWID has been broken from the very beginning.","1","2","-2"],["2007-07-03","b464e004c2262bdde5a44381e4fb48ae265c9410","claudio","","Backout part of 1.20 because IEEE80211_AUTH_ALGORITHM() and friends are used by hostapd and tcpdump. Now tcpdump and hostapd should build again.","1","19","-1"],["2007-07-03","87a9f7d349e973fb763639ec7fb1320818e2e83b","claudio","","Readd IEEE80211_REASON_RSN_REQUIRED and IEEE80211_REASON_RSN_INCONSISTENT userland is using these defines -- unbreaks build. Found by jasper@ discussed with reyk@.","1","3","-1"],["2007-07-02","a9e1b8c7c666cbba009aa215b4aeedd6b6b8a509","damien","","remove more unused stuff.","1","1","-39"],["2007-07-02","d8fab15bb6f5fcca9dd28453f9c835cf577ebe6c","damien","","add new ieee80211_eapol_key structure (used by the various 802.11i key handshakes).","1","41","-1"],["2007-07-02","e0ebb1b218a5c6ed26e5432ffe7503e7090c4432","damien","","split ieee80211_parse_rsn() so the same function can be used to parse both WPA1 and RSN (WPA2) IEs. rename ieee80211_parse_edca_params_common() into ieee80211_parse_edca_params_body() while i'm here.","1","78","-41"],["2007-07-02","2658d2236d1ce28e20696b3ec82e62aa3aa8d2e8","damien","","fix REASON codes.","1","14","-6"],["2007-07-02","5416ea61b82d4fa664e9d922fe9a5e89cb354c5d","damien","","add IEEE80211_FC1_PROTECTED flag. keep IEEE80211_FC1_WEP for compatibility with pre-RSNA networks.","1","3","-2"],["2007-07-02","dc246926b557fba9b6384cdaa713a06f24525f1a","damien","","initial bits for proper TIM support.","4","61","-4"],["2007-07-02","889ef8e54b0da25b9d710031c2f26f31304580db","damien","","remove a lot of unused #define fix a CAPINFO name","1","4","-46"],["2007-07-02","9f818ea6ccdb58124c0e2bbaec0a8190111319c0","damien","","replace some letoh16(*(u_int16_t *)frm) by LE_READ_2(frm) for consistency.","1","17","-17"],["2007-07-02","8f5eba9e3962cc60ea5dd0d2f114e04adb4bfcbc","damien","","split ieee80211_send_mgmt() like I did for ieee80211_recv_mgmt()","1","402","-271"],["2007-06-21","03e01a4538f5f285d38995ef80bc167a42a8c23c","damien","","cleanup CAPINFO values.","1","10","-7"],["2007-06-21","0e5ee508aae4cff8ce469cfe5f9aaa48013d31dd","damien","","add EDCA Parameter Set and QoS capability IEs to appropriate frames when QoS is supported and activated.","2","69","-6"],["2007-06-21","8a8aec1a5080eefdc25bc7dcae77b0ce96901af6","damien","","add two new functions:","1","135","-4"],["2007-06-21","27440a363eddec0268fc6ae11934b2999072f06a","damien","","add (currently unused) code to parse RSN IEs.","2","180","-6"],["2007-06-21","1e04177558ad0f7aa090bd5cf00c757482daa55c","damien","","parse vendor-specific Microsoft WMM OUI. unfortunately, most APs that advertise themselves as being 802.11e capable still use the Microsoft OUI instead of the standard IEEE 802.11 information element.","1","44","-10"],["2007-06-21","dbedfd469c6e74f17eaf586b5f0facf4b8f6ea08","damien","","cleanup the list of Organizationally Unique Identifiers (OUI).","1","7","-15"],["2007-06-21","798cf383e61d099fc3eff8586c48311233bca995","damien","","add fields for EDCA.","1","9","-5"],["2007-06-21","18f99ae25e8eeef3dc3ce0d7fd31891b79b7e020","damien","","add code to parse EDCA parameter set information elements. add myself to the copyright list.","1","116","-5"],["2007-06-21","2434b7c142708511c01aa448d4d493a052846ac2","damien","","s/IEEE80211_ELEMID_EDCA_PARAMS/IEEE80211_ELEMID_EDCAPARMS/ for consistency.","1","2","-2"],["2007-06-21","0aadfd325cad6ae369ffaf0c75733cc4a473276c","damien","","split ieee80211_recv_mgmt() into smaller functions: - ieee80211_recv_probe_resp - ieee80211_recv_probe_req - ieee80211_recv_auth - ieee80211_recv_assoc_req - ieee80211_recv_assoc_resp - ieee80211_recv_deauth - ieee80211_recv_disassoc","1","686","-584"],["2007-06-17","455d25119a52cb5c4de26eb9312cffb65cf39c07","damien","","Add a new capability flag IEEE80211_C_QOS indicating that the driver supports QoS. Add a new flag IEEE80211_F_QOS indicating whether QoS is enabled or not. Add a callback to notify drivers that AC parameters have changed in the QBSS.  Drivers implementing QoS should define this callback and update their EDCA settings accordingly.","1","4","-1"],["2007-06-17","4055d0dcfe9cf09dc01f1d9d62539f972e39ad9e","damien","","keep track of the Tx/Rx sequence numbers for each TID in the ieee80211_node structure. add a flag to indicate whether a STA is a QSTA or not.","2","8","-2"],["2007-06-17","d4665cde4de6b16421d14ce2e7a7bcb856000339","damien","","- remove two unused structures - add three new information elements identifiers:   IEEE80211_ELEMID_QBSS_LOAD  : QBSS Load   IEEE80211_ELEMID_EDCA_PARAMS: EDCA Parameter Set   IEEE80211_ELEMID_QOS_CAP    : QoS Capability","1","4","-41"],["2007-06-16","cdd8ad3a6d593750e4b4dbef57b23d0d67edb907","damien","","move global declaration of ieee80211_merge_print_intvl into the only function that uses it.","1","5","-7"],["2007-06-16","ea3ee88f0a2a67a606b4f825b8091496437546e5","damien","","remove stupid macro.","1","8","-9"],["2007-06-16","662dd3691915549c80cee39c560cf1127d3afde3","damien","","ieee80211_lookup_node() does not exist. remove prototype in .h and ref in man pages.","1","1","-3"],["2007-06-16","ec2fadc1d97263eaf2de78651c5abc8f89002390","damien","","constify","13","118","-105"],["2007-06-16","3cd160f7166defe70a59573dc04c9f7ed16bdc59","damien","","don't mix u_int{8,16,32}_t and uint{8,16,32}_t use u_int{8,16,32}_t everywhere.","3","10","-10"],["2007-06-16","6f55296de12548645a2a9439731ede76ac06b108","damien","","de-static","6","62","-56"],["2007-06-11","b5815638bc7dc2ecc4eacfdc8c0069470d643ca5","damien","","remove unused structure.","1","1","-5"],["2007-06-11","ef3f5af4382d1f78cc5689bbae7263841834a38c","damien","","adds 802.11e EDCA tables for QAPs and non-AP QSTAs. not used yet.","3","124","-9"],["2007-06-07","b210c25bb74ec15790f71c32b1f43a8929c62217","damien","","expand the IEEE80211_NODE_{LOCK,UNLOCK}* macros into their respective definitions. remove comments about \"lock order reversals\" that are specific to freebsd.","3","32","-42"],["2007-06-07","13d3e20f84b2441f3942be829f3bce67858eeebd","damien","","move ieee80211_compute_duration() and ieee80211_compute_duration1() functions into the two drivers that use them (atw and rtw.) this code is not generic enough to be used by other drivers and there is no chance that it will ever be used in newer driver since it supports 802.11b only. plus, it hurts my eyes each time i look into ieee80211_output.c.","3","3","-184"],["2007-06-06","e917dafabcc0d240199e43f412f5f6de322a745b","damien","","The license permits us to redistribute this code under the BSD or the GPLv2. Choose the BSD license so that future enhancements will be BSD-only.","13","13","-65"],["2007-04-10","a40906ff2e96735354e5ab6f1c81c2ba43ff0035","Miod Vallat","miod@openbsd.org","``it's'' -> ``its'' when the grammar gods require this change.","1","2","-2"],["2007-02-14","2a6c66b549f1937646591e94c211fdc64bc1696f","jsg","","FALLTHRU -> FALLTHROUGH for consistency. Suggested by miod@","1","4","-4"],["2006-12-29","1ba093d1cff7bac2f151a4761d77190d14da29a5","Reyk Floeter","reyk@openbsd.org","fix the key buffer size used for software wep, this could cause problems with non-standard wep keys >= 104 bits.","2","17","-4"],["2006-12-25","4cce27420568e69ff3f795af9a07d063afa25cab","Reyk Floeter","reyk@openbsd.org","print the phy mode in IFF_DEBUG status output which helps to debug dual/multi mode chipset operation.","5","22","-20"],["2006-12-20","c852edc83cd5035b006b9faf8c85036bf2732ce0","Alexander Yurchenko","grange@openbsd.org","Put all net80211 interfaces into the ``wlan'' interface group. Idea from me, name ``wlan'' from henning@.","1","3","-1"],["2006-11-26","cf723ec806a2d7231233ea2a34c025b927b75e88","Theo de Raadt","deraadt@openbsd.org","avoid extra inclusions; ok jsg","3","3","-6"],["2006-11-26","3ad2e995bf99f5357aadcd69f7ddcc14483fc1ec","Theo de Raadt","deraadt@openbsd.org","do not have each net80211 driver define its own rates structures.  if they use the standard rates, use some defined by net80211 itself.  kernel shrinks a bit ok jsg mglocker","2","15","-2"],["2006-11-15","a1bc2605d25dd97866c55fb7e387f31462d0a8c1","damien","","s/roundup/howmany/ where it makes sense.","2","6","-6"],["2006-11-13","c40dbfe8a0832abf7a75f1c7a42812df856d5251","damien","","fix a possible NULL deref.","1","3","-3"],["2006-11-03","a1126595a5846f4cf328a38c5fc768c3e8721a55","damien","","Add two new functions: - ieee80211_get_rts - ieee80211_get_cts_to_self that can be use by drivers for chipsets that don't offer hardware assisted RTS/CTS protection (like ral/ural/rum).","2","60","-2"],["2006-10-19","70c943747e4d61b374a3dbbe689e887497f57624","tom","","s/Mhz/MHz/ in comments and printf() strings","1","2","-2"],["2006-08-29","22294cf2421b4d6e8faecad6e7dd852505bbe463","damien","","Fix handling of beacon frames by stations while they're associated. Changes in the ERP information element and in the capinfo field were not detected properly, so the drivers were not able to adjust their settings (like short slot time, short preamble, protection mode etc...) dynamically. Should fix BSS mode with both 802.11b and 802.11g stations.","1","5","-13"],["2006-08-29","4d7cf2e8a7cbf598fa896ced9a6c700a55de6956","damien","","make ic_stats.is_rx_tooshort statistic more accurate. cosmetic tweaks.","1","20","-15"],["2006-08-29","c52fb8fda8c945741cadcb5741d4cae0ec5857d3","damien","","Change the way ieee80211_fix_rate() handles the IEEE80211_F_DOFRATE flag. Instead of removing the rates from the node's rate set, just check that the fixed rate is present in the rate set. Otherwise, the node will be marked non-ERP which will force the use of protection mode (either CTS-to-self or RTS/CTS) in an 802.11g network and degrade performance. This fixes HostAP mode for 11g with a fixed rate. Problem originally reported by Sam Fourman Jr. Code from FreeBSD.","1","15","-14"],["2006-08-19","10908d4611a52f23dff8ac03aa5cf52aacb7003d","damien","","move computation of mbps after checking the value of ni->ni_txrate","1","3","-2"],["2006-07-29","f11762cf957c34d788328f4f0e3f738e0f3fdb96","Miod Vallat","miod@openbsd.org","ALIGNED_POINTER is always defined.","1","1","-3"],["2006-06-27","9314356af54f23b49c5261bd7e2b584a86ec4911","Reyk Floeter","reyk@openbsd.org","add the net80211 hostap options \"nwflag hidenwid\" for hidden SSID mode and \"nwflag nobridge\" to prevent inter-station communications. \"hidenwid\" will also work with wi(4) to replace the old -E 3 option of wicontrol.","5","57","-7"],["2006-06-24","94ee55eacb5ae8c8bafe3e771dc4dd287380ebe0","Theo de Raadt","deraadt@openbsd.org","ieee80211_cfgget() and ieee80211_cfgset() are dead; ok jsg","1","1","-3"],["2006-06-23","0709bf4fb2adda01307c41551c98dc3a87a89b6b","Reyk Floeter","reyk@openbsd.org","add an optional max_rssi attribute to the ieee80211com structure and allow to export the RSSI Max value with ioctls and by radiotap headers.","4","15","-4"],["2006-06-19","1700fe487f7d6e838bf78024b484cb00bc706134","Reyk Floeter","reyk@openbsd.org","unbreak the code if compiled with IEEE80211_DEBUG by using the right node attribute.","1","2","-2"],["2006-06-18","c7202ed4b286f754d077911356f501447f024ea9","damien","","s/memcmp/IEEE80211_ADDR_EQ/","1","2","-3"],["2006-06-18","ab92a1fc1e98e4fa394d0ca6af0c242bf266891e","damien","","Improve 802.11b/g interoperability and move toward better compliance with IEEE Std 802.11g-2003 standard:","9","390","-91"],["2006-06-17","a706be0d1f7b1cfc1bd3c8d83691473c1a2650ab","damien","","s/int/u_int/g","1","8","-8"],["2006-06-17","d5620c26b9acf2afdd8cee7f20d64a65fe53175b","damien","","protect those files against multiple inclusions too.","2","10","-2"],["2006-06-17","0cbbe472902d5ce93f090f95945130b0ac4fa538","damien","","Move AMRR rate control algorithm out of wpi(4) and ural(4), into net80211.","2","169","0"],["2006-05-21","0f8924794ad311ee55ee942201e49f52670e606e","damien","","account for the size of a 802.11 header in ieee80211_getmbuf(). fix some typos while i'm here.","1","8","-5"],["2006-05-19","d102d84fdbc13bc619a87490dab6f691ac66d507","damien","","use ieee80211_add_ssid() in ieee80211_beacon_alloc() and wpi(4) instead of duplicating the code.","1","2","-5"],["2006-05-19","6b059e925c350932c0bc703007e28b6448ef2414","damien","","- export ieee80211_add_ssid() just like ieee80211_add_(x)rates() so I don't   need to duplicate the code in wpi(4) - fix ieee80211_alloc_beacon() - clean two comments while i'm here","2","11","-14"],["2006-04-22","9ea43a8dc90deba5691c27054f12c455ea895f3d","Federico G. Schwindt","fgsch@openbsd.org","typo.","1","2","-2"],["2006-03-25","b0829a398e53effeb4d32dd2bdbded4826ea2312","Damien Miller","djm@openbsd.org","allow bpf(4) to ignore packets based on their direction (inbound or outbound), using a new BIOCSDIRFILT ioctl; guidance, feedback and ok canacar@","1","5","-5"],["2006-03-04","d990d4f52e124ef4676bdb8f3f7e9b5042cf2f74","Brad Smith","brad@openbsd.org","With the exception of two other small uncommited diffs this moves the remainder of the network stack from splimp to splnet.","1","2","-2"],["2006-02-20","1a479d5fbcd5dea7f6f25c52dbd86f8e0df91054","damien","","Fix kernel builds without bpfilter. Linking is still broken.","1","1","-4"],["2006-02-19","725dbbebab8e7b0531be570809a1aee868bceb1a","damien","","Fix a comment in ieee80211_next_scan().","1","2","-2"],["2006-01-11","889cdc10d83d4ec614bce95313b7c1820cbf8010","Todd C. Miller","millert@openbsd.org","Disable shared key mode until we have a way for the user to specify that they explicitly want it.  What we have currently doesn't seem to work anyway.  Add support for specifying a status type when sending managemnent frames; adapted from FreeBSD.  OK jsg@","2","22","-10"],["2006-01-04","5d0808a68db97d494901079d2db496693be1d2d6","canacar","","Remove redundant calls to bpfdetach. ok brad@","1","1","-4"],["2006-01-02","c7b6cf9028e8ebc7000346e3d0b617e511318f66","Reyk Floeter","reyk@openbsd.org","use the correct format string directive %llu instead of \"%ull\". pointed out by Thorsten Glaser.","1","3","-3"],["2005-12-18","8e4ee3d89315d4519549c9175e4119e743b61faf","Reyk Floeter","reyk@openbsd.org","Update my e-mail address in the copyright statement, no binary changes.","2","4","-4"],["2005-12-09","cb41a826a563f4bd66da6ce7fb4ad9e75d02dec7","jsg","","/* fall thru... */ -> /* FALLTHROUGH */","1","2","-2"],["2005-11-03","0e3de61f98558630ab32a511f87abc7f17027e30","Reyk Floeter","reyk@openbsd.org","re-implement the bpf \"filter drop\" option that it actually works. the bpf FILDROP interface exists for about one year but the required interface to the drivers was missing - so it was useless. this new approach based on a design by henning@ uses a new mbuf flag to mark filtered packets and to drop them in the generic network stack input routines (like ether_input).","1","10","-1"],["2005-10-09","b415dc06a589bbfc6305b92e883c87846d7d9486","Reyk Floeter","reyk@openbsd.org","if the wireless hostap interface belongs to a bridge, learn the node's address dynamically on this interface after successful association. this could speed wireless roaming to openbsd accesspoints.","1","26","-1"],["2005-10-07","e3cfcf2ddba738ed56f0fa7656d8376837a3f2e1","Reyk Floeter","reyk@openbsd.org","minor knf","2","5","-4"],["2005-09-13","a413de8398fca893f8fdeefc11ba0d01da4a9b54","Reyk Floeter","reyk@openbsd.org","replace the node hash table with a red-black tree. this fixes some bugs in the node table (like duplicate nodes in hostap mode), we get rid of possible hash collisions, and it simplifies the code.","6","78","-117"],["2005-09-08","14e881ce307a3539521ae81d720410e31ad7fdcb","Reyk Floeter","reyk@openbsd.org","mostly knf","13","193","-175"],["2005-09-08","882641a7dfee3240075427b98c06cd463143a605","jsg","","Remove the last of the FreeBSD compatiblity goop. ok reyk@","8","46","-91"],["2005-09-08","f711bdd7ceec69b6c2aade1392e39d8ab20daee7","jsg","","Remove FreeBSD if_printf compat function from net80211. ok reyk@","8","53","-98"],["2005-09-08","fd10daed82e5911300d0a4b763044a573a3b31fc","Reyk Floeter","reyk@openbsd.org","reset the scan state for each new mode","3","32","-18"],["2005-09-07","94a1a90d7d3008eec5b4cf148a98da140eb3692e","jsg","","Remove FreeBSD/NetBSD ifdef mess.  We are not likely to be doing a wholesale merge with them in future. very enthusiastic ok from reyk@","11","11","-775"],["2005-07-30","e624cef18deed43f5a3cad543c780d559e7e52ea","Reyk Floeter","reyk@openbsd.org","remove a useless timeout after tx (decrease nasty delays while scanning) and fix various other minor things in the ath(4) driver.","1","6","-1"],["2005-05-28","bd9c15b996bbbb5b0391ddf6cceffe87b582043e","Reyk Floeter","reyk@openbsd.org","enable IFCAP_VLAN_MTU because IEEE 802.11 defines a MTU of about 2290. successfully tested with ural, ath, atw, atu and ath.","1","4","-1"],["2005-05-25","342df743a8cdf6da2ec5932439959cddbcd68b68","Reyk Floeter","reyk@openbsd.org","add ifconfig -M option to replace wicontrol -L and -l for ap scanning and node listing. wicontrol is not supported by net80211 drivers anymore. further improvements will be done.","8","295","-873"],["2005-05-13","58add90f0aaba0b57f9b3ab1723a4f4bc06d7819","jsg","","do { } while (0) wrappers on debug printf macros. ok reyk@","1","3","-3"],["2005-05-07","db382c7a9a3e6d60c6a81e11d7e2562b3829adca","jsg","","Fix compilation with IEEE80211_DEBUG defined. Spotted by djm@. ok djm@, reyk@","1","4","-4"],["2005-04-21","6339b0ee1f70bd50f9dab8e0bcf5138270ac91eb","Reyk Floeter","reyk@openbsd.org","scan the next mode if nothing has been found. this is necessary if the device supports different incompatible modes in the same channel range, like like 11b and \"pure\" 11G mode.","3","46","-3"],["2005-04-20","5d8757df7d63d99bc9b95391a86ed99d3c608ae2","Reyk Floeter","reyk@openbsd.org","send raw 802.11 frames with bpf(4) using the IEEE802_11 or IEEE802_11_RADIO data link types.","3","117","-3"],["2005-04-03","9d8526aa19dcc33a8506622f31f7f193eb93133f","Uwe Stuehler","uwe@openbsd.org","remove redundant suser() checks","1","1","-3"],["2005-04-02","47e87d9a7d19580e0b99be691429a7f17cc29826","Uwe Stuehler","uwe@openbsd.org","Protect SIOCSIFMTU, too.","1","3","-1"],["2005-04-01","3973fb473e6f1ede8a6ac9f1c1425a8ff817b6c9","Uwe Stuehler","uwe@openbsd.org","Protect more SIOCS* commands with suser() checks.","1","13","-13"],["2005-04-01","13f6d2fe78752d5aea6b6aa0ba91fe35252028a1","Uwe Stuehler","uwe@openbsd.org","Fix some ioctl permission checks on the basis of what if_wi.c does.","1","13","-3"],["2005-03-13","20746f2f5810fa4957ee7ec516389f9311fec223","Reyk Floeter","reyk@openbsd.org","fix whitespace","1","7","-10"],["2005-03-11","a142d68668885771d9b86459b5a8db77d52a07df","jsg","","Make sure we associate an interface with the m_pkthdr in ieee80211_beacon_alloc. ok damien@ reyk@","1","2","-1"],["2005-03-08","ad26e2bbf55d803070617f735769792635da7422","Michael Shalayeff","mickey@openbsd.org","make this compile","1","9","-9"],["2005-03-03","25d43571ff97e5522e04cabd8d40b68f31e904d7","damien","","addtion of a generic function for allocating beacons: ieee80211_beacon_alloc(). ok jsg@, reyk@, dlg@","2","94","-2"],["2005-02-27","97cbb732071603a9cce3471cb888e6a08b8b8c41","Reyk Floeter","reyk@openbsd.org","remove dead code of unsupported ioctls from FreeBSD. we do it in a different way.","2","7","-378"],["2005-02-26","f166bd858a53b26ec031aeb98e33ff67bee68c86","jsg","","Fix a problem introduced with the recent lru cache change. Check that we actually have a node before trying to release it. This was causing a panic when playing with IBSS. ok reyk@","1","3","-2"],["2005-02-23","65cc786b85a6aa3670393ce9794fa6237585bc66","Reyk Floeter","reyk@openbsd.org","add all supported regulation domains. the forced COUNTRYCODE in ar5xxx is now disabled by default to use the value found in EEPROM.","1","384","-418"],["2005-02-17","fd234b005f600e0757ee186d47189a1b2c8ffed8","Reyk Floeter","reyk@openbsd.org","a new year and a new, less restrictive license. because it has to be free.","2","24","-42"],["2005-02-17","403246c290b0f34e157f7a440e5fa0e1a8131339","Reyk Floeter","reyk@openbsd.org","derived from NetBSD:","11","903","-450"],["2005-02-15","9ca1f5842155a2418083cc605bd6476f57bbf533","Reyk Floeter","reyk@openbsd.org","add the manual tx power option. this is supported by some prism2/2.5/3 cards in hostap mode but it depends on the firmware version. support for other wireless chipsets will be added in the future using the net80211-framework.","3","42","-6"],["2005-01-07","eb0eb4cc19ea1042c3bbb18b6c0579db4013f36c","Reyk Floeter","reyk@openbsd.org","add support for BIOCGDLTLIST and BIOCSDLT, see bpf(4)","1","1","-6"],["2004-12-30","496a77dc4726e30c78be8caf67a114c6b3ab4428","Reyk Floeter","reyk@openbsd.org","shorter symbolic names for regulation domains and 2GHz channels for FCC1A.","1","57","-57"],["2004-12-30","d9359580e417f8c4c6cb4ec15b415c265f89e9d7","Reyk Floeter","reyk@openbsd.org","replace __attribute__((__packed__)) with __packed.","2","17","-17"],["2004-12-28","e45326f14a367c397ea3833016788cc6c51dcf39","jsg","","Sync with recent NetBSD ieee80211_compute_duration() changes.","2","45","-65"],["2004-12-25","e1dbe6b67e4341ac2a6a726b11e2e83c2ea887cc","Theo de Raadt","deraadt@openbsd.org","in real C, there is not , after the last enum entry; ok reyk","5","17","-17"],["2004-12-23","b767145c7c1d2f6f096e4cf3c153bc1624f81069","jsg","","From dyoung@NetBSD:","3","35","-21"],["2004-12-23","cad709ee93ba608306758cfdf2c2777d91c94a95","jsg","","From dyoung@NetBSD:","3","223","-5"],["2004-12-06","7d5dc51700e948c81c9d26785500e77e80ba7c96","David Gwynne","dlg@openbsd.org","add a flag that lets a wireless card indicate it can receive probe responses or beacons on any channel during a scan.","2","5","-3"],["2004-11-25","2460d98ad8e85edaa894c0dad49f260e7a89d6db","Reyk Floeter","reyk@openbsd.org","compatibility ioctls for things like \"wicontrol ath0 -l\" to list known stations on a net80211-based ap. ok millert@","1","95","-1"],["2004-11-06","d1b1c3441ad9654597e209996659e1aa79be78cd","Reyk Floeter","reyk@openbsd.org","fixed types in ieee80211_regdomain (thanks to Joerg Sonnenberger). now it also works with gcc3 (ok naddy@).","2","13","-13"],["2004-11-03","38299a5d39be8aa1c8076112ba9eab7058c59604","claudio","","Use IFM_IEEE80211_IBSS for IBSS mode instead of IFM_IEEE80211_ADHOC. With this ipw(4) works in IBSS mode. ok millert@ aaron@ damien@","1","11","-12"],["2004-11-02","30bc118ecd0b24fb72b98089b0b850401cfe49ee","Todd C. Miller","millert@openbsd.org","Don't call memset() if MALLOC returns NULL; also fix the rcs ID. From Patrick Latifi; OK reyk@","1","3","-2"],["2004-11-02","77316b54ad4d5ac65dfadee7a216d80518324490","Reyk Floeter","reyk@openbsd.org","some changes merged in from netbsd. ieee80211_regdomain.# will be used by sdr (software defined radios).","8","1153","-28"],["2004-10-20","2ee38054ef6e3a609b5572b69aa0457d1e85f2c5","Federico G. Schwindt","fgsch@openbsd.org","CAPINFO_BITS from the current net/if_ieee80211.h header; fixes CHNL_AGILITY printing too. deraadt ok.","1","4","-1"],["2004-10-04","26caf6fb8b02491f056a8f281442f2a3f994ecc7","Michael Shalayeff","mickey@openbsd.org","need sys/param.h to compile","1","2","-1"],["2004-07-04","d143de29ed70c5cc1ed7887203ec1f406bb6af48","Christian Weisgerber","naddy@openbsd.org","fix a NetBSDism and a pasto left over from the import; ok millert@","2","3","-5"],["2004-06-28","2ba5cd620c26298124437bf940608e7207d5b85a","Todd C. Miller","millert@openbsd.org","Don't restrict WEP keys to exactly 40 or 108 bits.","2","11","-13"],["2004-06-28","4bfe4539cddde2a1f2d373195c156a251a61213a","Todd C. Miller","millert@openbsd.org","Enable AP scanning via the WI_RID_PRISM2 ioctl.  Now atw(4) can do ap scanning via wicontrol.","1","1","-6"],["2004-06-27","3cb1da20647e0f030a709da2b2d61bcbb363f80e","Todd C. Miller","millert@openbsd.org","Hack to avoid panic in arc4maybeinit() due to rnd device not being attached yet.","1","2","-5"],["2004-06-22","36a464030ee8ae15735a19d3edd5bea6eb8b37d1","Todd C. Miller","millert@openbsd.org","Import current NetBSD/FreeBSD 802.11 framework. Based in part on a diff from Matthew Gream.","18","8783","0"]]},"name":"OpenBSD"}]